{
	"info": {
		"name": "Candidate Management Tests",
		"_postman_id": "2fb15e8d-bd47-6fff-3517-ac7b49c6707e",
		"description": "This collection contains all of the rest points' tests of our app.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Candidate (Validated)",
			"item": [
				{
					"name": "Find a Candidate - With checkCandidate set as \"VALIDATED\"",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a94ac650-0416-4766-b935-e7d3b860cb4e",
								"type": "text/javascript",
								"exec": [
									"var id=pm.globals.get(\"temp_id\");",
									"pm.globals.unset(\"temp_id\");",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"The Candidate is Validated\", function () {",
									"    pm.expect(pm.response.json().checkCandidate).to.eql(\"VALIDATED\");",
									"});",
									"",
									"removeCandidate(id);",
									"",
									"function removeCandidate(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/candidates/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "29a4e118-1818-4e79-b92b-dbd79b7beb23",
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/candidates',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstName\": \"firstName\",",
									"            \"lastName\": \"lastName\",",
									"            \"email\": \"email@email.email\",",
									"            \"phone\": \"0000000000\",",
									"            \"checkCandidate\" : \"VALIDATED\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_id\", res.json().id);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/candidates/{{temp_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"candidates",
								"{{temp_id}}"
							]
						},
						"description": "With checkCandidate set as \"VALIDATED\""
					},
					"response": []
				},
				{
					"name": "Find a Candidate - normal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f44ba91e-be45-4584-a8f1-4acac6f1c752",
								"type": "text/javascript",
								"exec": [
									"var id=pm.globals.get(\"temp_id\");",
									"pm.globals.unset(\"temp_id\");",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"The Candidate is Validated\", function () {",
									"    pm.expect(pm.response.json().checkCandidate).to.eql(\"VALIDATED\");",
									"});",
									"",
									"removeCandidate(id);",
									"",
									"function removeCandidate(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/candidates/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "0504886e-f4b0-4470-b7d9-c70e8eaa3f3e",
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/candidates/',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstName\": \"firstName\",",
									"            \"lastName\": \"lastName\",",
									"            \"email\": \"email@email.email\",",
									"            \"phone\": \"0000000000\",",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_id\", res.json().id);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/candidates/{{temp_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"candidates",
								"{{temp_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find all Candidates - normal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a28e7a76-2944-4d62-b004-dd7d8045f30c",
								"type": "text/javascript",
								"exec": [
									"var id_n_1=pm.globals.get(\"temp_id_n_1\");",
									"var id_n_2=pm.globals.get(\"temp_id_n_2\");",
									"var id_v_1=pm.globals.get(\"temp_id_v_1\");",
									"var id_v_2=pm.globals.get(\"temp_id_v_2\");",
									"pm.globals.unset(\"temp_id_n_1\");",
									"pm.globals.unset(\"temp_id_n_2\");",
									"pm.globals.unset(\"temp_id_v_1\");",
									"pm.globals.unset(\"temp_id_v_2\");",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Found all Candidates\", function () {",
									"    var all_id = pm.response.json()._embedded.candidates.map(x => x.id);",
									"\tvar shoud_not_find=[id_n_1,id_n_2];",
									"    var needed_id = [id_v_1,id_v_2];",
									"    var found_id = all_id.filter(x => needed_id.includes(x) || shoud_not_find.includes(x));",
									"    pm.expect(found_id.sort()).to.eql(needed_id.sort());",
									"});",
									"",
									"removeNYVCandidate(id_n_1);",
									"removeNYVCandidate(id_n_2);",
									"removeCandidate(id_v_1);",
									"removeCandidate(id_v_2);",
									"",
									"",
									"function removeCandidate(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/candidates/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}",
									"",
									"function removeNYVCandidate(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/not-yet-validated-candidates/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5a6f7c8b-0fe3-414d-a900-1515e81949a7",
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/not-yet-validated-candidates',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstName\": \"firstname1\",",
									"            \"lastName\": \"lastname1\",",
									"            \"email\": \"email1@email1.email1\",",
									"            \"phone\": \"0000000001\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_id_n_1\", res.json().id);",
									"});",
									"",
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/not-yet-validated-candidates',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstName\": \"firstname2\",",
									"            \"lastName\": \"lastname2\",",
									"            \"email\": \"email2@email2.email2\",",
									"            \"phone\": \"0000000002\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_id_n_2\", res.json().id);",
									"});",
									"",
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/candidates',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstName\": \"firstname3\",",
									"            \"lastName\": \"lastname3\",",
									"            \"email\": \"email3@email3.email3\",",
									"            \"phone\": \"0000000003\",",
									"            \"checkCandidate\" : \"VALIDATED\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_id_v_1\", res.json().id);",
									"});",
									"",
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/candidates',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstName\": \"firstname4\",",
									"            \"lastName\": \"lastname4\",",
									"            \"email\": \"email4@email4.email4\",",
									"            \"phone\": \"0000000004\",",
									"            \"checkCandidate\" : \"VALIDATED\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_id_v_2\", res.json().id);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/candidates/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"candidates",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a candidate - with a null candidate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "716e3b62-4dd9-498e-be8f-254ab8abe56e",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Requset unsuccesfull\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "http://localhost:8080/api/candidates",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"candidates"
							]
						},
						"description": "With null candidate"
					},
					"response": []
				},
				{
					"name": "Create a candidate - with checkCandidate set as \"VALIDATED\"",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2ec8424b-6210-4474-9179-be58526baf66",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"The Candidate is Validated\", function () {",
									"        pm.expect(pm.response.json().checkCandidate).to.eql(\"VALIDATED\");",
									"});",
									"",
									"removeCandidate(pm.response.json().id);",
									"",
									"function removeCandidate(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/candidates/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"firstName\",\n  \"lastName\": \"lastName\",\n  \"email\": \"email@email.email\",\n  \"phone\": \"0000000000\",\n  \"checkCandidate\" : \"VALIDATED\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/candidates",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"candidates"
							]
						},
						"description": "With checkCandidate set as \"VALIDATED\""
					},
					"response": []
				},
				{
					"name": "Create a candidate - normal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cd7c96e6-eeb4-48f3-b5ac-cb8d13488776",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"The Candidate is Validated\", function () {",
									"        pm.expect(pm.response.json().checkCandidate).to.eql(\"VALIDATED\");",
									"});",
									"",
									"removeCandidate(pm.response.json().id);",
									"",
									"function removeCandidate(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/candidates/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"firstName\",\n  \"lastName\": \"lastName\",\n  \"email\": \"email@email.email\",\n  \"phone\": \"0000000000\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/candidates",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"candidates"
							]
						},
						"description": "With first name, last name, phone, email"
					},
					"response": []
				},
				{
					"name": "Create multiple candidates - normal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "99496d69-b6ef-49bd-ae32-6216abd6ab5e",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var exist1,exist2,exist3;",
									"",
									"var list=pm.response.json()._embedded.candidates;",
									"for(i=list.length-3;i<list.length;i++){",
									"    if(list[i].email===\"email1@email.email\"){",
									"        exist1=true;",
									"    }else{",
									"        if(list[i].email===\"email2@email.email\"){",
									"            exist2=true;",
									"        }else{",
									"            if(list[i].email===\"email3@email.email\"){",
									"                exist3=true;",
									"            }",
									"        } ",
									"    }",
									"    removeTag(list[i].id);",
									"}",
									"",
									"pm.test(\"Candidates1 was inserted\", function () {",
									"    pm.expect(exist1).to.be.true;",
									"});",
									"",
									"pm.test(\"Candidates2 was inserted\", function () {",
									"    pm.expect(exist2).to.be.true;",
									"});",
									"",
									"pm.test(\"Candidates2 was inserted\", function () {",
									"    pm.expect(exist3).to.be.true;",
									"});",
									"",
									"",
									"function removeTag(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/candidates/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n{\n  \"firstName\": \"firstName\",\n  \"lastName\": \"lastName1\",\n  \"email\": \"email1@email.email\",\n  \"phone\": \"0000000000\",\n  \"checkCandidate\" : \"NOT_YET_VALIDATED\"\n},{\n  \"firstName\": \"firstName\",\n  \"lastName\": \"lastName2\",\n  \"email\": \"email2@email.email\",\n  \"phone\": \"0000000000\",\n  \"checkCandidate\" : \"NOT_YET_VALIDATED\"\n},{\n  \"firstName\": \"firstName\",\n  \"lastName\": \"lastName3\",\n  \"email\": \"email3@email.email\",\n  \"phone\": \"0000000000\",\n  \"checkCandidate\" : \"NOT_YET_VALIDATED\"\n}\n\t]"
						},
						"url": {
							"raw": "http://localhost:8080/api/candidates/multiple",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"candidates",
								"multiple"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit a candidate - edit to validate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "65c1d363-b5cb-460e-92eb-2a4d628357d2",
								"type": "text/javascript",
								"exec": [
									"var id = pm.globals.get(\"temp_id\");",
									"pm.globals.unset(\"temp_id\");",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"First name is changed \", function () {",
									"    pm.expect(pm.response.json().firstName).to.eql(\"test\");",
									"});",
									"",
									"pm.test(\"Last name is changed \", function () {",
									"    pm.expect(pm.response.json().lastName).to.eql(\"test\");",
									"});",
									"",
									"pm.test(\"Email is changed \", function () {",
									"    pm.expect(pm.response.json().email).to.eql(\"test@test.test\");",
									"});",
									"",
									"pm.test(\"Phone is default \", function () {",
									"    pm.expect(pm.response.json().phone).to.eql(null);",
									"});",
									"",
									"pm.test(\"Check candidate can not be changed \", function () {",
									"    pm.expect(pm.response.json().checkCandidate).to.eql(\"VALIDATED\");",
									"});",
									"",
									"removeCandidate(id);",
									"",
									"function removeCandidate(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/candidates/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "49a5f9a9-fd2b-42fa-8d79-ad8e550681e3",
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/candidates',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstName\": \"notFirstName\",",
									"            \"lastName\": \"notLastName\",",
									"            \"email\": \"notEmail@notEmail.notEmail\",",
									"            \"phone\": \"0000000000\",",
									"            \"checkCandidate\" : \"NOT_YET_VALIDATED\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_id\", res.json().id);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"test\",\n  \"lastName\": \"test\",\n  \"email\": \"test@test.test\",\n  \"checkCandidate\" : \"NOT_YET_VALIDATED\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/candidates/{{temp_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"candidates",
								"{{temp_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit a candidate - normal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4425d5b2-0e48-4e93-a9ce-084688e50425",
								"type": "text/javascript",
								"exec": [
									"var id = pm.globals.get(\"temp_id\");",
									"pm.globals.unset(\"temp_id\");",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"First name is changed \", function () {",
									"    pm.expect(pm.response.json().firstName).to.eql(\"test\");",
									"});",
									"",
									"pm.test(\"Last name is changed \", function () {",
									"    pm.expect(pm.response.json().lastName).to.eql(\"test\");",
									"});",
									"",
									"pm.test(\"Email is changed \", function () {",
									"    pm.expect(pm.response.json().email).to.eql(\"test@test.test\");",
									"});",
									"",
									"pm.test(\"Phone is default \", function () {",
									"    pm.expect(pm.response.json().phone).to.eql(null);",
									"});",
									"",
									"pm.test(\"Check candidate can not be changed is default \", function () {",
									"    pm.expect(pm.response.json().checkCandidate).to.eql(\"VALIDATED\");",
									"});",
									"",
									"removeCandidate(id);",
									"",
									"function removeCandidate(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/candidates/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3ce0a63e-1140-4e4e-986e-2943a30056b3",
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/candidates',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstName\": \"notFirstName\",",
									"            \"lastName\": \"notLastName\",",
									"            \"email\": \"notEmail@notEmail.notEmail\",",
									"            \"phone\": \"0000000000\",",
									"            \"checkCandidate\" : \"VALIDATED\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_id\", res.json().id);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"test\",\n  \"lastName\": \"test\",\n  \"email\": \"test@test.test\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/candidates/{{temp_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"candidates",
								"{{temp_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a Candidate - normal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bac70daa-edbd-4e6b-945f-a9827a47b0a6",
								"type": "text/javascript",
								"exec": [
									"var id = pm.globals.get(\"temp_id\");",
									"pm.globals.unset(\"temp_id\");",
									"",
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/candidates/' + id,",
									"    method: 'GET'",
									"}, function (err, res) {",
									"    pm.test(\"Trying to find it returns the status 404\", function () {",
									"        pm.expect(res.code).to.eql(404);",
									"    });",
									"});",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f788f725-baec-4e75-bd3e-3abd4e1f955c",
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/candidates',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstName\": \"firstName\",",
									"            \"lastName\": \"lastName\",",
									"            \"email\": \"email@email.email\",",
									"            \"phone\": \"0000000000\",",
									"            \"checkCandidate\" : \"NOT_YET_VALIDATED\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_id\", res.json().id);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/candidates/{{temp_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"candidates",
								"{{temp_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Candidate (Not Yet Validated)",
			"item": [
				{
					"name": "Find a Candidate - With checkCandidate set as \"VALIDATED\"",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f7d4ea35-d84a-42a4-ba4d-eaa500d5e767",
								"type": "text/javascript",
								"exec": [
									"var id = pm.globals.get(\"temp_id\");",
									"pm.globals.unset(\"temp_id\");",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"The Candidate is Not Yet Validated\", function () {",
									"    pm.expect(pm.response.json().checkCandidate).to.eql(\"NOT_YET_VALIDATED\");",
									"});",
									"",
									"removeCandidate(id);",
									"",
									"function removeCandidate(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/not-yet-validated-candidates/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "55378b26-0999-455d-8d52-55cbd1052eba",
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/not-yet-validated-candidates',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstName\": \"firstName\",",
									"            \"lastName\": \"lastName\",",
									"            \"email\": \"email@email.email\",",
									"            \"phone\": \"0000000000\",",
									"            \"checkCandidate\" : \"VALIDATED\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_id\", res.json().id);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/not-yet-validated-candidates/{{temp_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"not-yet-validated-candidates",
								"{{temp_id}}"
							]
						},
						"description": "With checkCandidate set as \"VALIDATED\""
					},
					"response": []
				},
				{
					"name": "Find a Candidate - normal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0617c8bf-7792-48d9-9647-219fdd91f7f2",
								"type": "text/javascript",
								"exec": [
									"var id =pm.globals.get(\"temp_id\");",
									"pm.globals.unset(\"temp_id\");",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"The Candidate is Not Yet Validated\", function () {",
									"    pm.expect(pm.response.json().checkCandidate).to.eql(\"NOT_YET_VALIDATED\");",
									"});",
									"",
									"removeCandidate(id);",
									"",
									"function removeCandidate(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/not-yet-validated-candidates/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "90f9c4d8-7100-4f1f-b6b7-c8400eacee20",
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/not-yet-validated-candidates',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstName\": \"firstName\",",
									"            \"lastName\": \"lastName\",",
									"            \"email\": \"email@email.email\",",
									"            \"phone\": \"0000000000\",",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_id\", res.json().id);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/not-yet-validated-candidates/{{temp_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"not-yet-validated-candidates",
								"{{temp_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find all Candidates  - normal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "31609f86-f4bd-4e38-b5c7-473c66232722",
								"type": "text/javascript",
								"exec": [
									"var id_n_1 =pm.globals.get(\"temp_id_n_1\");",
									"var id_n_2 =pm.globals.get(\"temp_id_n_2\");",
									"var id_v_1 =pm.globals.get(\"temp_id_v_1\");",
									"var id_v_2 =pm.globals.get(\"temp_id_v_2\");",
									"pm.globals.unset(\"temp_id_n_1\");",
									"pm.globals.unset(\"temp_id_n_2\");",
									"pm.globals.unset(\"temp_id_v_1\");",
									"pm.globals.unset(\"temp_id_v_2\");",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Found all Candidates\", function () {",
									"    var all_id = pm.response.json()._embedded.candidates.map(x => x.id);",
									"\tvar needed_id = [id_n_1,id_n_2];",
									"    var shoud_not_find = [id_v_1,id_v_2];",
									"    var found_id = all_id.filter(x => needed_id.includes(x) || shoud_not_find.includes(x))",
									"    pm.expect(found_id.sort()).to.eql(needed_id.sort());",
									"    ",
									"});",
									"",
									"removeNYVCandidate(id_n_1);",
									"removeNYVCandidate(id_n_2);",
									"removeCandidate(id_v_1);",
									"removeCandidate(id_v_2);",
									"",
									"function removeCandidate(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/candidates/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}",
									"",
									"function removeNYVCandidate(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/not-yet-validated-candidates/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "b394cd3a-6db7-4f85-8a06-6ee68f8bb728",
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/not-yet-validated-candidates',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstName\": \"firstname1\",",
									"            \"lastName\": \"lastname1\",",
									"            \"email\": \"email1@email1.email1\",",
									"            \"phone\": \"0000000001\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_id_n_1\", res.json().id);",
									"});",
									"",
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/not-yet-validated-candidates',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstName\": \"firstname2\",",
									"            \"lastName\": \"lastname2\",",
									"            \"email\": \"email2@email2.email2\",",
									"            \"phone\": \"0000000002\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_id_n_2\", res.json().id);",
									"});",
									"",
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/candidates',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstName\": \"firstname3\",",
									"            \"lastName\": \"lastname3\",",
									"            \"email\": \"email3@email3.email3\",",
									"            \"phone\": \"0000000003\",",
									"            \"checkCandidate\" : \"VALIDATED\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_id_v_1\", res.json().id);",
									"});",
									"",
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/candidates',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstName\": \"firstname4\",",
									"            \"lastName\": \"lastname4\",",
									"            \"email\": \"email4@email4.email4\",",
									"            \"phone\": \"0000000004\",",
									"            \"checkCandidate\" : \"VALIDATED\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_id_v_2\", res.json().id);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/not-yet-validated-candidates",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"not-yet-validated-candidates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a candidate - with a null candidate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "716e3b62-4dd9-498e-be8f-254ab8abe56e",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Requset unsuccesfull\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "http://localhost:8080/api/not-yet-validated-candidates",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"not-yet-validated-candidates"
							]
						},
						"description": "With null candidate"
					},
					"response": []
				},
				{
					"name": "Create a candidate - with checkCandidate set as \"VALIDATED\"",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0f115a5c-f009-40bd-ac65-e7c074660b31",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"The Candidate is Not Yet Validated\", function () {",
									"        pm.expect(pm.response.json().checkCandidate).to.eql(\"NOT_YET_VALIDATED\");",
									"});",
									"",
									"removeCandidate(pm.response.json().id);",
									"",
									"function removeCandidate(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/not-yet-validated-candidates/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"firstName\",\n  \"lastName\": \"lastName\",\n  \"email\": \"email@email.email\",\n  \"phone\": \"0000000000\",\n  \"checkCandidate\" : \"VALIDATED\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/not-yet-validated-candidates",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"not-yet-validated-candidates"
							]
						},
						"description": "With checkCandidate set as \"VALIDATED\""
					},
					"response": []
				},
				{
					"name": "Create a candidate - normal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2a9010de-707b-4a50-9160-6a393be76469",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"The Candidate is Not Yet Validated\", function () {",
									"        pm.expect(pm.response.json().checkCandidate).to.eql(\"NOT_YET_VALIDATED\");",
									"});",
									"",
									"removeCandidate(pm.response.json().id);",
									"",
									"function removeCandidate(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/not-yet-validated-candidates/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"firstName\",\n  \"lastName\": \"lastName\",\n  \"email\": \"email@email.email\",\n  \"phone\": \"0000000000\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/not-yet-validated-candidates",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"not-yet-validated-candidates"
							]
						},
						"description": "With first name, last name, phone, email"
					},
					"response": []
				},
				{
					"name": "Create multiple candidates - normal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3bc76fef-6b4c-4412-a2c9-154762fa907b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var exist1,exist2,exist3;",
									"",
									"var list=pm.response.json()._embedded.candidates;",
									"for(i=list.length-3;i<list.length;i++){",
									"    if(list[i].email===\"email1@email.email\"){",
									"        exist1=true;",
									"    }else{",
									"        if(list[i].email===\"email2@email.email\"){",
									"            exist2=true;",
									"        }else{",
									"            if(list[i].email===\"email3@email.email\"){",
									"                exist3=true;",
									"            }",
									"        } ",
									"    }",
									"    removeTag(list[i].id);",
									"}",
									"",
									"pm.test(\"Candidates1 was inserted\", function () {",
									"    pm.expect(exist1).to.be.true;",
									"});",
									"",
									"pm.test(\"Candidates2 was inserted\", function () {",
									"    pm.expect(exist2).to.be.true;",
									"});",
									"",
									"pm.test(\"Candidates2 was inserted\", function () {",
									"    pm.expect(exist3).to.be.true;",
									"});",
									"",
									"",
									"function removeTag(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/not-yet-validated-candidates/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n{\n  \"firstName\": \"firstName\",\n  \"lastName\": \"lastName1\",\n  \"email\": \"email1@email.email\",\n  \"phone\": \"0000000000\",\n  \"checkCandidate\" : \"VALIDATED\"\n},{\n  \"firstName\": \"firstName\",\n  \"lastName\": \"lastName2\",\n  \"email\": \"email2@email.email\",\n  \"phone\": \"0000000000\",\n  \"checkCandidate\" : \"VALIDATED\"\n},{\n  \"firstName\": \"firstName\",\n  \"lastName\": \"lastName3\",\n  \"email\": \"email3@email.email\",\n  \"phone\": \"0000000000\",\n  \"checkCandidate\" : \"VALIDATED\"\n}\n\t]"
						},
						"url": {
							"raw": "http://localhost:8080/api/not-yet-validated-candidates/multiple",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"not-yet-validated-candidates",
								"multiple"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit a candidate - edit to validate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bd567f37-019c-44a4-8af7-7a79b6e61fcd",
								"type": "text/javascript",
								"exec": [
									"var id =pm.globals.get(\"temp_id\");",
									"pm.globals.unset(\"temp_id\");",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"First name is changed \", function () {",
									"    pm.expect(pm.response.json().firstName).to.eql(\"test\");",
									"});",
									"",
									"pm.test(\"Last name is changed \", function () {",
									"    pm.expect(pm.response.json().lastName).to.eql(\"test\");",
									"});",
									"",
									"pm.test(\"Email is changed \", function () {",
									"    pm.expect(pm.response.json().email).to.eql(\"test@test.test\");",
									"});",
									"",
									"pm.test(\"Phone is default \", function () {",
									"    pm.expect(pm.response.json().phone).to.eql(null);",
									"});",
									"",
									"pm.test(\"Check candidate can not be validated \", function () {",
									"    pm.expect(pm.response.json().checkCandidate).to.eql(\"NOT_YET_VALIDATED\");",
									"});",
									"",
									"removeCandidate(id);",
									"",
									"function removeCandidate(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/not-yet-validated-candidates/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ef6449f5-5827-4f67-9c8a-c97ee7e2b7f4",
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/not-yet-validated-candidates',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstName\": \"notFirstName\",",
									"            \"lastName\": \"notLastName\",",
									"            \"email\": \"notEmail@notEmail.notEmail\",",
									"            \"phone\": \"0000000000\",",
									"            \"checkCandidate\" : \"NOT_YET_VALIDATED\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_id\", res.json().id);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"test\",\n  \"lastName\": \"test\",\n  \"email\": \"test@test.test\",\n  \"checkCandidate\" : \"VALIDATED\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/not-yet-validated-candidates/{{temp_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"not-yet-validated-candidates",
								"{{temp_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit a candidate - normal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3e7a371f-3c1f-43b9-9b62-64e45670b2c5",
								"type": "text/javascript",
								"exec": [
									"var id =pm.globals.get(\"temp_id\");",
									"pm.globals.unset(\"temp_id\");",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"First name is changed \", function () {",
									"    pm.expect(pm.response.json().firstName).to.eql(\"test\");",
									"});",
									"",
									"pm.test(\"Last name is changed \", function () {",
									"    pm.expect(pm.response.json().lastName).to.eql(\"test\");",
									"});",
									"",
									"pm.test(\"Email is changed \", function () {",
									"    pm.expect(pm.response.json().email).to.eql(\"test@test.test\");",
									"});",
									"",
									"pm.test(\"Phone is default \", function () {",
									"    pm.expect(pm.response.json().phone).to.eql(null);",
									"});",
									"",
									"pm.test(\"Check candidate is default \", function () {",
									"    pm.expect(pm.response.json().checkCandidate).to.eql(\"NOT_YET_VALIDATED\");",
									"});",
									"",
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/not-yet-validated-candidates/' + pm.globals.get(\"temp_id\"),",
									"    method: 'DELETE'",
									"}, function (err, res) {",
									"});",
									"",
									"removeCandidate(id);",
									"",
									"function removeCandidate(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/not-yet-validated-candidates/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "39b676ad-c7dc-4dd9-9272-59da116e8da5",
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/not-yet-validated-candidates',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstName\": \"notFirstName\",",
									"            \"lastName\": \"notLastName\",",
									"            \"email\": \"notEmail@notEmail.notEmail\",",
									"            \"phone\": \"0000000000\",",
									"            \"checkCandidate\" : \"NOT_YET_VALIDATED\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_id\", res.json().id);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"test\",\n  \"lastName\": \"test\",\n  \"email\": \"test@test.test\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/not-yet-validated-candidates/{{temp_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"not-yet-validated-candidates",
								"{{temp_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a Candidate - normal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5fd69760-52d3-46e4-ba2d-abd6c1ab7571",
								"type": "text/javascript",
								"exec": [
									"var id =pm.globals.get(\"temp_id\");",
									"pm.globals.unset(\"temp_id\");",
									"",
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/not-yet-validated-candidates/' + id,",
									"    method: 'GET'",
									"}, function (err, res) {",
									"    pm.test(\"Trying to find it returns the status 404\", function () {",
									"        pm.expect(res.code).to.eql(404);",
									"    });",
									"});",
									""
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "696ced12-0779-4a6c-a505-2c304133d318",
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/not-yet-validated-candidates',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstName\": \"firstName\",",
									"            \"lastName\": \"lastName\",",
									"            \"email\": \"email@email.email\",",
									"            \"phone\": \"0000000000\",",
									"            \"checkCandidate\" : \"NOT_YET_VALIDATED\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_id\", res.json().id);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/not-yet-validated-candidates/{{temp_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"not-yet-validated-candidates",
								"{{temp_id}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"id": "40ec9af8-e34c-49c8-8218-16b924922625",
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"id": "2edc3781-f9a9-48e9-81b3-d3062c2bb953",
						"type": "text/javascript"
					}
				}
			]
		},
		{
			"name": "CandidateSkills",
			"item": [
				{
					"name": "Find a CandidateSkills - normal",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "21642836-80ec-428b-a149-0fc33221a52c",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/candidates/',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstName\": \"firstName\",",
									"            \"lastName\": \"lastName\",",
									"            \"email\": \"email@email.email\",",
									"            \"phone\": \"0000000000\",",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    var cand_id=res.json().id;",
									"    pm.globals.set(\"cand_id\", cand_id);",
									"    ",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/tags/',",
									"        method: 'POST',",
									"        header: 'Content-Type:application/json',",
									"        body: {",
									"            mode: 'raw',",
									"            raw: JSON.stringify({",
									"                \"description\": \"description\",",
									"                \"tagType\": \"tagType\"",
									"                })",
									"        }",
									"    }, function (err, res) {",
									"        var tag_id = res.json().id;",
									"        pm.globals.set(\"tag_id\", tag_id);",
									"        ",
									"        pm.sendRequest({",
									"            url: 'http://localhost:8080/api/candidateSkills/',",
									"            method: 'POST',",
									"            header: 'Content-Type:application/json',",
									"            body: {",
									"                mode: 'raw',",
									"                raw: JSON.stringify({",
									"                    \"candidateId\":cand_id,",
									"        \t        \"tagId\":tag_id,",
									"                    \"rating\":\"rating\",",
									"                    \"certifier\":\"certifier\"",
									"                })",
									"            }",
									"        }, function (err, res) {",
									"            pm.globals.set(\"temp_id\", res.json().id);",
									"        });",
									"    });",
									"    ",
									"});",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "3fd685be-dcd6-4942-b954-c98b812de2e1",
								"type": "text/javascript",
								"exec": [
									"var id=pm.globals.get(\"temp_id\");",
									"var t_id=pm.globals.get(\"tag_id\");",
									"var c_id=pm.globals.get(\"cand_id\");",
									"pm.globals.unset(\"temp_id\");",
									"pm.globals.unset(\"tag_id\");",
									"pm.globals.unset(\"cand_id\");",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"removeCandidateSkills(id,t_id,c_id);",
									"",
									"function removeCandidateSkills(id,tag_id,cand_id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/candidateSkills/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"            pm.sendRequest({",
									"                url: 'http://localhost:8080/api/candidates/'+cand_id,",
									"                method: 'DELETE'",
									"                }, function (err, res) {",
									"            });",
									"            pm.sendRequest({",
									"                url: 'http://localhost:8080/api/tags/'+tag_id,",
									"                method: 'DELETE'",
									"                }, function (err, res) {",
									"            });",
									"    });",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/candidateSkills/{{temp_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"candidateSkills",
								"{{temp_id}}"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Find all CandidateSkills - normal",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2929b703-3036-4544-b236-e8ba65509388",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/candidates/',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstName\": \"firstName\",",
									"            \"lastName\": \"lastName\",",
									"            \"email\": \"email@email.email\",",
									"            \"phone\": \"0000000000\",",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    var cand_id=res.json().id;",
									"    pm.globals.set(\"cand_id\", cand_id);",
									"    ",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/tags/',",
									"        method: 'POST',",
									"        header: 'Content-Type:application/json',",
									"        body: {",
									"            mode: 'raw',",
									"            raw: JSON.stringify({",
									"                \"description\": \"description\",",
									"                \"tagType\": \"tagType\"",
									"                })",
									"        }",
									"    }, function (err, res) {",
									"        var tag_id = res.json().id;",
									"        pm.globals.set(\"tag_id\", tag_id);",
									"        ",
									"        pm.sendRequest({",
									"            url: 'http://localhost:8080/api/candidateSkills/',",
									"            method: 'POST',",
									"            header: 'Content-Type:application/json',",
									"            body: {",
									"                mode: 'raw',",
									"                raw: JSON.stringify({",
									"        \t        \"tagId\":tag_id,",
									"                    \"candidateId\":cand_id,",
									"                    \"rating\":\"rating\",",
									"                    \"certifier\":\"certifier\"",
									"                })",
									"            }",
									"        }, function (err, res) {",
									"            pm.globals.set(\"temp_id1\", res.json().id);",
									"        });",
									"        ",
									"        pm.sendRequest({",
									"            url: 'http://localhost:8080/api/candidateSkills/',",
									"            method: 'POST',",
									"            header: 'Content-Type:application/json',",
									"            body: {",
									"                mode: 'raw',",
									"                raw: JSON.stringify({",
									"        \t        \"tagId\":tag_id,",
									"                    \"candidateId\":cand_id,",
									"                    \"rating\":\"rating\",",
									"                    \"certifier\":\"certifier\"",
									"                })",
									"            }",
									"        }, function (err, res) {",
									"            pm.globals.set(\"temp_id2\", res.json().id);",
									"        });",
									"    });",
									"    ",
									"});",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "726bd03f-d02f-435a-bd95-8d6d6fab9ad4",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"var id1 = pm.globals.get(\"temp_id1\");",
									"var id2 = pm.globals.get(\"temp_id2\");",
									"var t_id = pm.globals.get(\"tag_id\");",
									"var c_id = pm.globals.get(\"cand_id\");",
									"pm.globals.unset(\"temp_id1\");",
									"pm.globals.unset(\"temp_id2\");",
									"pm.globals.unset(\"tag_id\");",
									"pm.globals.unset(\"cand_id\");",
									"",
									"pm.test(\"It found the two inserted candidateSkillses\",function(){",
									"    var existId1,existId2;",
									"    var candidateSkills = pm.response.json()._embedded.candidateSkillses;",
									"    for(i=candidateSkills.length-1;i>=0;i--){",
									"        if(candidateSkills[i].id === id1){",
									"            existId1 = true;",
									"            ",
									"        }",
									"        if(candidateSkills[i].id === id2){",
									"            existId2 = true;",
									"            ",
									"        }",
									"        if(existId1 && existId2){",
									"            break;",
									"        }",
									"    }",
									"    pm.expect(existId1).to.eql(true);",
									"    pm.expect(existId2).to.eql(true);",
									"});",
									"",
									"",
									"removeCandidateSkills(id1,t_id,c_id);",
									"removeCandidateSkills(id2,t_id,c_id);",
									"",
									"",
									"function removeCandidateSkills(id,tag_id,cand_id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/candidateSkills/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"            pm.sendRequest({",
									"                url: 'http://localhost:8080/api/candidates/'+cand_id,",
									"                method: 'DELETE'",
									"                }, function (err, res) {",
									"            });",
									"            pm.sendRequest({",
									"                url: 'http://localhost:8080/api/tags/'+tag_id,",
									"                method: 'DELETE'",
									"                }, function (err, res) {",
									"            });",
									"    });",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"firstName\": \"lala\"}"
						},
						"url": {
							"raw": "http://localhost:8080/api/candidateSkills/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"candidateSkills",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a CandidateSkills - normal",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "bbd17400-d7b7-490b-9100-1ac0353e7895",
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/candidates/',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstName\": \"firstName\",",
									"            \"lastName\": \"lastName\",",
									"            \"email\": \"email@email.email\",",
									"            \"phone\": \"0000000000\",",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"cand_id\", res.json().id);",
									"});",
									"",
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/tags',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"description\": \"description\",",
									"            \"tagType\": \"tagType\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"tag_id\", res.json().id);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2d2d9061-38ca-4b8e-93f8-3505d5f55dbd",
								"type": "text/javascript",
								"exec": [
									"var t_id=pm.globals.get(\"tag_id\");",
									"var c_id=pm.globals.get(\"cand_id\");",
									"pm.globals.unset(\"tag_id\");",
									"pm.globals.unset(\"cand_id\");",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.sendRequest({",
									"        url: 'http://localhost:8080/api/candidateSkills/'+pm.response.json().id,",
									"        method: 'GET'",
									"        }, function (err, res) {",
									"        pm.test(\"CandidateSkills was inserted\", function () {",
									"            pm.expect(res.code).to.eql(200);",
									"        });",
									"        removeCandidateSkills(pm.response.json().id,t_id,c_id);",
									"});",
									"",
									"",
									"function removeCandidateSkills(id,tag_id,cand_id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/candidateSkills/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"            pm.sendRequest({",
									"                url: 'http://localhost:8080/api/candidates/'+cand_id,",
									"                method: 'DELETE'",
									"                }, function (err, res) {",
									"            });",
									"            pm.sendRequest({",
									"                url: 'http://localhost:8080/api/tags/'+tag_id,",
									"                method: 'DELETE'",
									"                }, function (err, res) {",
									"            });",
									"    });",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"tagId\":{{tag_id}},\n   \"candidateId\":{{cand_id}},\n    \"rating\":\"rating\",\n    \"certifier\":\"certifier\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/candidateSkills/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"candidateSkills",
								""
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create multiple CandidateSkills - normal",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "bbd17400-d7b7-490b-9100-1ac0353e7895",
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/candidates/',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstName\": \"firstName\",",
									"            \"lastName\": \"lastName\",",
									"            \"email\": \"email@email.email\",",
									"            \"phone\": \"0000000000\",",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"cand_id\", res.json().id);",
									"});",
									"",
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/tags',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"description\": \"description\",",
									"            \"tagType\": \"tagType\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"tag_id\", res.json().id);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c089965c-b083-42c1-90ea-5fa9a833175a",
								"type": "text/javascript",
								"exec": [
									"var t_id=pm.globals.get(\"tag_id\");",
									"var c_id=pm.globals.get(\"cand_id\");",
									"pm.globals.unset(\"tag_id\");",
									"pm.globals.unset(\"cand_id\");",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var exist1,exist2,exist3;",
									"",
									"var list=pm.response.json()._embedded.candidateSkillses;",
									"for(i=list.length-3;i<list.length;i++){",
									"    if(list[i].rating===\"rating1\"){",
									"        exist1=true;",
									"    }else{",
									"        if(list[i].rating===\"rating2\"){",
									"            exist2=true;",
									"        }else{",
									"            if(list[i].rating===\"rating3\"){",
									"                exist3=true;",
									"            }",
									"        } ",
									"    }",
									"    removeCandidateSkills(list[i].id);",
									"}",
									"",
									"pm.test(\"CandidateSkills1 was inserted\", function () {",
									"    pm.expect(exist1).to.be.true;",
									"});",
									"",
									"pm.test(\"CandidateSkills2 was inserted\", function () {",
									"    pm.expect(exist2).to.be.true;",
									"});",
									"",
									"pm.test(\"CandidateSkills3 was inserted\", function () {",
									"    pm.expect(exist3).to.be.true;",
									"});",
									"",
									"function removeCandidateSkills(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/candidateSkills/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"            removeOther(t_id,c_id);",
									"    });",
									"}",
									"",
									"function removeOther(tag_id,cand_id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/candidates/'+cand_id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"            });",
									"            pm.sendRequest({",
									"                url: 'http://localhost:8080/api/tags/'+tag_id,",
									"                method: 'DELETE'",
									"                }, function (err, res) {",
									"            });",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\n   \"tagId\":{{tag_id}},\n   \"candidateId\":{{cand_id}},\n    \"rating\":\"rating1\",\n    \"certifier\":\"certifier\"\n},{\n   \"tagId\":{{tag_id}},\n   \"candidateId\":{{cand_id}},\n    \"rating\":\"rating2\",\n    \"certifier\":\"certifier\"\n},{\n   \"tagId\":{{tag_id}},\n   \"candidateId\":{{cand_id}},\n    \"rating\":\"rating3\",\n    \"certifier\":\"certifier\"\n}\n\t]"
						},
						"url": {
							"raw": "http://localhost:8080/api/candidateSkills/multiple",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"candidateSkills",
								"multiple"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Edit a CandidateSkills - normal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "98865087-0aeb-4e85-b190-3b5f5ab789af",
								"type": "text/javascript",
								"exec": [
									"var id = pm.globals.get(\"temp_id\");",
									"var t_id = pm.globals.get(\"tag_id\");",
									"var c_id = pm.globals.get(\"cand_id\");",
									"pm.globals.unset(\"temp_id\");",
									"pm.globals.unset(\"tag_id\");",
									"pm.globals.unset(\"cand_id\");",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Rating is changed\",function(){",
									"    pm.expect(pm.response.json().rating).to.eql(\"newRating\");",
									"});",
									"",
									"pm.test(\"Certifier is changed\",function(){",
									"    pm.expect(pm.response.json().certifier).to.eql(\"newCertifier\");",
									"});",
									"",
									"removeCandidateSkills(id,t_id,c_id);",
									"",
									"function removeCandidateSkills(id,tag_id,cand_id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/candidateSkills/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"            pm.sendRequest({",
									"                url: 'http://localhost:8080/api/candidates/'+cand_id,",
									"                method: 'DELETE'",
									"                }, function (err, res) {",
									"            });",
									"            pm.sendRequest({",
									"                url: 'http://localhost:8080/api/tags/'+tag_id,",
									"                method: 'DELETE'",
									"                }, function (err, res) {",
									"            });",
									"    });",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "38fa6569-d381-4770-b246-2cb3fe90304b",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/candidates/',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstName\": \"firstName\",",
									"            \"lastName\": \"lastName\",",
									"            \"email\": \"email@email.email\",",
									"            \"phone\": \"0000000000\",",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    var cand_id=res.json().id;",
									"    pm.globals.set(\"cand_id\", cand_id);",
									"    ",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/tags/',",
									"        method: 'POST',",
									"        header: 'Content-Type:application/json',",
									"        body: {",
									"            mode: 'raw',",
									"            raw: JSON.stringify({",
									"                \"description\": \"description\",",
									"                \"tagType\": \"tagType\"",
									"                })",
									"        }",
									"    }, function (err, res) {",
									"        var tag_id = res.json().id;",
									"        pm.globals.set(\"tag_id\", tag_id);",
									"        ",
									"        pm.sendRequest({",
									"            url: 'http://localhost:8080/api/candidateSkills/',",
									"            method: 'POST',",
									"            header: 'Content-Type:application/json',",
									"            body: {",
									"                mode: 'raw',",
									"                raw: JSON.stringify({",
									"        \t        \"tagId\":tag_id,",
									"                    \"candidateId\":cand_id,",
									"                    \"rating\":\"rating\",",
									"                    \"certifier\":\"certifier\"",
									"                })",
									"            }",
									"        }, function (err, res) {",
									"            pm.globals.set(\"temp_id\", res.json().id);",
									"        });",
									"    });",
									"    ",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"tagId\":{{tag_id}},\n   \"candidateId\":{{cand_id}},\n    \"rating\":\"newRating\",\n    \"certifier\":\"newCertifier\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/candidateSkills/{{temp_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"candidateSkills",
								"{{temp_id}}"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete a CandidateSkills - normal",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7f4b54e5-3713-4984-9f14-59df5439440b",
								"type": "text/javascript",
								"exec": [
									"",
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/candidates/',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstName\": \"firstName\",",
									"            \"lastName\": \"lastName\",",
									"            \"email\": \"email@email.email\",",
									"            \"phone\": \"0000000000\",",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    var cand_id=res.json().id;",
									"    pm.globals.set(\"cand_id\", cand_id);",
									"    ",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/tags/',",
									"        method: 'POST',",
									"        header: 'Content-Type:application/json',",
									"        body: {",
									"            mode: 'raw',",
									"            raw: JSON.stringify({",
									"                \"description\": \"description\",",
									"                \"tagType\": \"tagType\"",
									"                })",
									"        }",
									"    }, function (err, res) {",
									"        var tag_id = res.json().id;",
									"        pm.globals.set(\"tag_id\", tag_id);",
									"        ",
									"        pm.sendRequest({",
									"            url: 'http://localhost:8080/api/candidateSkills/',",
									"            method: 'POST',",
									"            header: 'Content-Type:application/json',",
									"            body: {",
									"                mode: 'raw',",
									"                raw: JSON.stringify({",
									"        \t        \"tagId\":tag_id,",
									"                    \"candidateId\":cand_id,",
									"                    \"rating\":\"rating\",",
									"                    \"certifier\":\"certifier\"",
									"                })",
									"            }",
									"        }, function (err, res) {",
									"            pm.globals.set(\"temp_id\", res.json().id);",
									"        });",
									"    });",
									"    ",
									"});",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d439f0c2-5fd7-4784-821e-2a2b3ce4e40a",
								"type": "text/javascript",
								"exec": [
									"var id = pm.globals.get(\"temp_id\");",
									"var t_id = pm.globals.get(\"tag_id\");",
									"var c_id = pm.globals.get(\"cand_id\");",
									"pm.globals.unset(\"temp_id\");",
									"pm.globals.unset(\"tag_id\");",
									"pm.globals.unset(\"cand_id\");",
									"",
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/candidateSkills/' + id,",
									"    method: 'GET'",
									"    }, function (err, res) {",
									"        pm.test(\"Trying to find it returns the status 404\", function () {",
									"            pm.expect(res.code).to.eql(404);",
									"        });",
									"});",
									"",
									"removeOthers(t_id,c_id);",
									"",
									"function removeOthers(tag_id,cand_id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/candidates/'+cand_id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    });",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/tags/'+tag_id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    });",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/candidateSkills/{{temp_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"candidateSkills",
								"{{temp_id}}"
							]
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "CandidateNotes",
			"description": "",
			"item": [
				{
					"name": "Find a CandidateNotes - normal",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0f020008-2456-457e-a4ce-c18b9c5fe2fe",
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/candidateNotes',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"\t        \"status\":\"status\", ",
									"\t        \"note\":\"note\",",
									"            \"date\": \"1947-12-23\"",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_id\", res.json().id);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "42ab5177-7969-47b5-aaa6-af6d57b5f9ce",
								"type": "text/javascript",
								"exec": [
									"var id =pm.globals.get(\"temp_id\");",
									"pm.globals.unset(\"temp_id\");",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"removeCandidateNotes(id);",
									"",
									"function removeCandidateNotes(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/candidateNotes/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/candidateNotes/{{temp_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"candidateNotes",
								"{{temp_id}}"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Find all CandidateNotes - normal",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d7f10f6e-583b-4dd0-8aab-40e8eb9b47ae",
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/candidateNotes',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"\t        \"status\":\"status\", ",
									"\t        \"note\":\"note\",",
									"            \"date\": \"1947-12-23\"",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_id1\", res.json().id);",
									"});",
									"",
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/candidateNotes',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"\t        \"status\":\"status\", ",
									"\t        \"note\":\"note\",",
									"            \"date\": \"1947-12-23\"",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_id2\", res.json().id);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "89079bb8-8cd6-4b3c-82af-77f21ca2662a",
								"type": "text/javascript",
								"exec": [
									"var id1 = pm.globals.get(\"temp_id1\");",
									"var id2 = pm.globals.get(\"temp_id2\");",
									"pm.globals.unset(\"temp_id1\");",
									"pm.globals.unset(\"temp_id2\");",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"It found the two inserted candidateNotes\",function(){",
									"    var existId1,existId2;",
									"    var candidateNotes = pm.response.json()._embedded.candidateNoteses;",
									"    for(i=candidateNotes.length-1;i>=0;i--){",
									"        if(candidateNotes[i].id === id1){",
									"            existId1 = true;",
									"            ",
									"        }",
									"        if(candidateNotes[i].id === id2){",
									"            existId2 = true;",
									"            ",
									"        }",
									"        if(existId1 && existId2){",
									"            break;",
									"        }",
									"    }",
									"    pm.expect(existId1).to.eql(true);",
									"    pm.expect(existId2).to.eql(true);",
									"});",
									"",
									"removeCandidateNotes(id1);",
									"removeCandidateNotes(id2);",
									"",
									"function removeCandidateNotes(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/candidateNotes/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"firstName\": \"lala\"}"
						},
						"url": {
							"raw": "http://localhost:8080/api/candidateNotes/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"candidateNotes",
								""
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create a CandidateNotes - normal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0692994c-8052-4b44-941a-e06273897937",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.sendRequest({",
									"        url: 'http://localhost:8080/api/candidateNotes/'+pm.response.json().id,",
									"        method: 'GET'",
									"        }, function (err, res) {",
									"        pm.test(\"CandidateNotes was inserted\", function () {",
									"            pm.expect(res.code).to.eql(200);",
									"        });",
									"        removeCandidateNotes(pm.response.json().id);",
									"});",
									"",
									"function removeCandidateNotes(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/candidateNotes/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"status\":\"status\", \n\t\"note\":\"note\",\n    \"date\": \"1947-12-23\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/candidateNotes/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"candidateNotes",
								""
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create multiple CandidateNotes - normal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eb8dc3f5-807c-4513-8972-0af78193c5c6",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var exist1,exist2,exist3;",
									"",
									"var list=pm.response.json()._embedded.candidateNoteses;",
									"for(i=list.length-3;i<list.length;i++){",
									"    if(list[i].status===\"status1\"){",
									"        exist1=true;",
									"    }else{",
									"        if(list[i].status===\"status2\"){",
									"            exist2=true;",
									"        }else{",
									"            if(list[i].status===\"status3\"){",
									"                exist3=true;",
									"            }",
									"        } ",
									"    }",
									"    removeCandidateNotes(list[i].id);",
									"}",
									"",
									"pm.test(\"CandidateNotes1 was inserted\", function () {",
									"    pm.expect(exist1).to.be.true;",
									"});",
									"",
									"pm.test(\"CandidateNotes2 was inserted\", function () {",
									"    pm.expect(exist2).to.be.true;",
									"});",
									"",
									"pm.test(\"CandidateNotes3 was inserted\", function () {",
									"    pm.expect(exist3).to.be.true;",
									"});",
									"",
									"function removeCandidateNotes(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/candidateNotes/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n{\n\t\"status\":\"status1\", \n\t\"note\":\"note\",\n    \"date\": \"1947-12-23\"\n},{\n\t\"status\":\"status2\", \n\t\"note\":\"note\",\n    \"date\": \"1947-12-23\"\n},{\n\t\"status\":\"status3\", \n\t\"note\":\"note\",\n    \"date\": \"1947-12-23\"\n}\n\t]"
						},
						"url": {
							"raw": "http://localhost:8080/api/candidateNotes/multiple",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"candidateNotes",
								"multiple"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit a CandidateNotes - normal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b64f4776-80ae-428f-9aac-b084f116d50a",
								"type": "text/javascript",
								"exec": [
									"var id=pm.globals.get(\"temp_id\");",
									"pm.globals.unset(\"temp_id\");",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"removeCandidateNotes(id);",
									"",
									"pm.test(\"EducationType is changed\",function(){",
									"    pm.expect(pm.response.json().status).to.eql(\"newStatus\");",
									"});",
									"",
									"pm.test(\"Provider is changed\",function(){",
									"    pm.expect(pm.response.json().note).to.eql(\"NewNote\");",
									"});",
									"",
									"pm.test(\"Description is changed\",function(){",
									"    pm.expect(pm.response.json().date).to.eql(\"1996-12-23\");",
									"});",
									"",
									"function removeCandidateNotes(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/candidateNotes/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "811a50d9-bd32-4590-9566-055b9ded3b10",
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/candidateNotes',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"\t        \"status\":\"status\", ",
									"\t        \"note\":\"note\",",
									"            \"date\": \"1947-12-23\"",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_id\", res.json().id);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"status\":\"newStatus\", \n\t\"note\":\"NewNote\",\n    \"date\": \"1996-12-23\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/candidateNotes/{{temp_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"candidateNotes",
								"{{temp_id}}"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete a CandidateNotes - normal",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "b317d9cd-5036-4828-bcff-10996d0f5905",
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/candidateNotes',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"\t        \"status\":\"status\", ",
									"\t        \"note\":\"note\",",
									"            \"date\": \"1947-12-23\"",
									"        })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_id\", res.json().id);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "565fafd8-b888-4637-9d2c-e94126832e56",
								"type": "text/javascript",
								"exec": [
									"var id =pm.globals.get(\"temp_id\");",
									"pm.globals.unset(\"temp_id\");",
									"",
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/candidateNotes/' + id,",
									"    method: 'GET'",
									"}, function (err, res) {",
									"    pm.test(\"Trying to find it returns the status 404\", function () {",
									"        pm.expect(res.code).to.eql(404);",
									"    });",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/candidateNotes/{{temp_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"candidateNotes",
								"{{temp_id}}"
							]
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Education",
			"item": [
				{
					"name": "Find an Education - normal",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6c35ee0d-0533-4202-98ae-d096fa5c044b",
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/educations',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"educationType\": \"educationType\",",
									"            \"provider\": \"provider\",",
									"            \"description\": \"description\",",
									"            \"duration\": 0",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_id\", res.json().id);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1fcb2708-3a82-49a0-b70c-718455c72ce6",
								"type": "text/javascript",
								"exec": [
									"var id =pm.globals.get(\"temp_id\");",
									"pm.globals.unset(\"temp_id\");",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"removeEducations(id);",
									"",
									"function removeEducations(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/educations/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"firstName\": \"lala\"}"
						},
						"url": {
							"raw": "http://localhost:8080/api/educations/{{temp_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"educations",
								"{{temp_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find all Educations - normal",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7f31d5fd-3d76-4cd9-80f6-053a0d91075c",
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/educations',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"educationType\": \"educationType\",",
									"            \"provider\": \"provider\",",
									"            \"description\": \"description\",",
									"            \"duration\": 0",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_id\", res.json().id);",
									"});",
									"",
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/educations',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"educationType\": \"educationType\",",
									"            \"provider\": \"provider\",",
									"            \"description\": \"description\",",
									"            \"duration\": 0",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_id2\", res.json().id);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "29e40945-8cfb-4127-94fc-6851c2d7e2b4",
								"type": "text/javascript",
								"exec": [
									"var id1 = pm.globals.get(\"temp_id\");",
									"var id2 = pm.globals.get(\"temp_id2\");",
									"pm.globals.unset(\"temp_id\");",
									"pm.globals.unset(\"temp_id2\");",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"It found the two inserted educations\",function(){",
									"    var existId1,existId2;",
									"    var educations = pm.response.json()._embedded.educations;",
									"    for(i=educations.length-1;i>=0;i--){",
									"        if(educations[i].id === id1){",
									"            existId1 = true;",
									"            ",
									"        }",
									"        if(educations[i].id === id2){",
									"            existId2 = true;",
									"            ",
									"        }",
									"        if(existId1 && existId2){",
									"            break;",
									"        }",
									"    }",
									"    pm.expect(existId1).to.eql(true);",
									"    pm.expect(existId2).to.eql(true);",
									"});",
									"",
									"removeEducations(id1);",
									"removeEducations(id2);",
									"",
									"function removeEducations(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/educations/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"firstName\": \"lala\"}"
						},
						"url": {
							"raw": "http://localhost:8080/api/educations/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"educations",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create an Education - normal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "27a092ed-3ef0-4f51-a70f-adf9c9061281",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.sendRequest({",
									"        url: 'http://localhost:8080/api/educations/'+pm.response.json().id,",
									"        method: 'GET'",
									"        }, function (err, res) {",
									"        pm.test(\"Education was inserted\", function () {",
									"            pm.expect(res.code).to.eql(200);",
									"        });",
									"        removeEducations(pm.response.json().id);",
									"});",
									"",
									"",
									"function removeEducations(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/educations/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\n\t\"educationType\": \"educationType\",\n    \"provider\": \"provider\",\n    \"description\": \"description\",\n    \"duration\": 0\n\t\n}\n"
						},
						"url": {
							"raw": "http://localhost:8080/api/educations/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"educations",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create multiple Educations - normal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e89ceb66-1c2a-4c3d-a856-51faf10e4c1c",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var exist1,exist2,exist3;",
									"",
									"var list=pm.response.json()._embedded.educations;",
									"for(i=list.length-3;i<list.length;i++){",
									"    if(list[i].description===\"description1\"){",
									"        exist1=true;",
									"    }else{",
									"        if(list[i].description===\"description2\"){",
									"            exist2=true;",
									"        }else{",
									"            if(list[i].description===\"description3\"){",
									"                exist3=true;",
									"            }",
									"        } ",
									"    }",
									"    removeEducations(list[i].id);",
									"}",
									"",
									"pm.test(\"Education1 was inserted\", function () {",
									"    pm.expect(exist1).to.be.true;",
									"});",
									"",
									"pm.test(\"Education2 was inserted\", function () {",
									"    pm.expect(exist2).to.be.true;",
									"});",
									"",
									"pm.test(\"Education2 was inserted\", function () {",
									"    pm.expect(exist3).to.be.true;",
									"});",
									"",
									"function removeEducations(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/educations/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n{\n\t\n\t\"educationType\": \"educationType\",\n    \"provider\": \"provider\",\n    \"description\": \"description1\",\n    \"duration\": 0\n\t\n},{\n\t\n\t\"educationType\": \"educationType\",\n    \"provider\": \"provider\",\n    \"description\": \"description2\",\n    \"duration\": 0\n\t\n},{\n\t\n\t\"educationType\": \"educationType\",\n    \"provider\": \"provider\",\n    \"description\": \"description3\",\n    \"duration\": 0\n\t\n}\n\t]"
						},
						"url": {
							"raw": "http://localhost:8080/api/educations/multiple",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"educations",
								"multiple"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit an Education - normal",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "86c90b0a-e59b-45ae-a701-e4ede2dcdb48",
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/educations',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"educationType\": \"educationType\",",
									"            \"provider\": \"provider\",",
									"            \"description\": \"description\",",
									"            \"duration\": 0",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_id\", res.json().id);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "8f94515c-dd2c-4127-9107-0275cbd504d6",
								"type": "text/javascript",
								"exec": [
									"var id=pm.globals.get(\"temp_id\");",
									"pm.globals.unset(\"temp_id\");",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"removeEducation(id);",
									"",
									"pm.test(\"EducationType is changed\",function(){",
									"    pm.expect(pm.response.json().educationType).to.eql(\"newEducationType\");",
									"});",
									"",
									"pm.test(\"Provider is changed\",function(){",
									"    pm.expect(pm.response.json().provider).to.eql(\"newProvider\");",
									"});",
									"",
									"pm.test(\"Description is changed\",function(){",
									"    pm.expect(pm.response.json().description).to.eql(\"newDescription\");",
									"});",
									"",
									"pm.test(\"Duration is changed\",function(){",
									"    pm.expect(pm.response.json().duration).to.eql(1);",
									"});",
									"",
									"function removeEducation(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/educations/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\n\t\"educationType\": \"newEducationType\",\n    \"provider\": \"newProvider\",\n    \"description\": \"newDescription\",\n    \"duration\": 1\n\t\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/educations/{{temp_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"educations",
								"{{temp_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an Education - normal",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "23737491-c21c-4fe7-8d60-4cc363d0949c",
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/educations',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"educationType\": \"educationType\",",
									"            \"provider\": \"provider\",",
									"            \"description\": \"description\",",
									"            \"duration\": 0",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_id\", res.json().id);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "13ccd9ea-9095-4321-a174-3a326e222218",
								"type": "text/javascript",
								"exec": [
									"var id =pm.globals.get(\"temp_id\");",
									"pm.globals.unset(\"temp_id\");",
									"",
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/educations/' + id,",
									"    method: 'GET'",
									"}, function (err, res) {",
									"    pm.test(\"Trying to find it returns the status 404\", function () {",
									"        pm.expect(res.code).to.eql(404);",
									"    });",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/educations/{{temp_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"educations",
								"{{temp_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Tag",
			"item": [
				{
					"name": "Find a Tag - normal",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cc5822bd-e9e1-4e64-9068-1783fdb3ca72",
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/tags',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"description\": \"description\",",
									"            \"tagType\": \"tagType\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_id\", res.json().id);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a2b00643-8dce-4c76-acc6-81edb7cad07e",
								"type": "text/javascript",
								"exec": [
									"var id =pm.globals.get(\"temp_id\");",
									"pm.globals.unset(\"temp_id\");",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"removeTag(id);",
									"",
									"function removeTag(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/tags/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"firstName\": \"lala\"}"
						},
						"url": {
							"raw": "http://localhost:8080/api/tags/{{temp_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tags",
								"{{temp_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find all Tags - normal",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "353fdd2f-4fc4-4031-b9aa-c965aa0c36af",
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/tags',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"description\": \"description\",",
									"            \"tagType\": \"tagType\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_id\", res.json().id);",
									"});",
									"",
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/tags',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"description\": \"description\",",
									"            \"tagType\": \"tagType\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_id2\", res.json().id);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "47a099a0-0871-4e0a-873d-c1fbfd9fbb29",
								"type": "text/javascript",
								"exec": [
									"var id1 = pm.globals.get(\"temp_id\");",
									"var id2 = pm.globals.get(\"temp_id2\");",
									"pm.globals.unset(\"temp_id\");",
									"pm.globals.unset(\"temp_id2\");",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"It found the two inserted tags\",function(){",
									"    var existId1,existId2;",
									"    var tags = pm.response.json()._embedded.tags;",
									"    for(i=tags.length-1;i>=0;i--){",
									"        if(tags[i].id === id1){",
									"            existId1 = true;",
									"            ",
									"        }",
									"        if(tags[i].id === id2){",
									"            existId2 = true;",
									"            ",
									"        }",
									"        if(existId1 && existId2){",
									"            break;",
									"        }",
									"    }",
									"    pm.expect(existId1).to.eql(true);",
									"    pm.expect(existId2).to.eql(true);",
									"});",
									"",
									"removeTag(id1);",
									"removeTag(id2);",
									"",
									"function removeTag(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/tags/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"firstName\": \"lala\"}"
						},
						"url": {
							"raw": "http://localhost:8080/api/tags/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tags",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a Tag - normal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cf8e2342-1bec-41b2-be8d-df54daa6e69d",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.sendRequest({",
									"        url: 'http://localhost:8080/api/tags/'+pm.response.json().id,",
									"        method: 'GET'",
									"        }, function (err, res) {",
									"        pm.test(\"Tag was inserted\", function () {",
									"            pm.expect(res.code).to.eql(200);",
									"        });",
									"        removeTag(pm.response.json().id);",
									"});",
									"",
									"function removeTag(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/tags/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"description\": \"description\",\n    \"tagType\": \"tagType\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/tags/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tags",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create multiple Tags - normal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "82449221-db04-4417-92c3-bd1f2a71e1d4",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"var exist1,exist2,exist3;",
									"",
									"var list=pm.response.json()._embedded.tags;",
									"for(i=list.length-3;i<list.length;i++){",
									"    if(list[i].description===\"description1\"){",
									"        exist1=true;",
									"    }else{",
									"        if(list[i].description===\"description2\"){",
									"            exist2=true;",
									"        }else{",
									"            if(list[i].description===\"description3\"){",
									"                exist3=true;",
									"            }",
									"        } ",
									"    }",
									"    removeTag(list[i].id);",
									"}",
									"",
									"pm.test(\"Tag1 was inserted\", function () {",
									"    pm.expect(exist1).to.be.true;",
									"});",
									"",
									"pm.test(\"Tag2 was inserted\", function () {",
									"    pm.expect(exist2).to.be.true;",
									"});",
									"",
									"pm.test(\"Tag3 was inserted\", function () {",
									"    pm.expect(exist3).to.be.true;",
									"});",
									"",
									"",
									"function removeTag(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/tags/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n\t{\n\t\"description\": \"description1\",\n    \"tagType\": \"tagType\"\n},{\n\t\"description\": \"description2\",\n    \"tagType\": \"tagType\"\n},{\n\t\"description\": \"description3\",\n    \"tagType\": \"tagType\"\n}\n\t]"
						},
						"url": {
							"raw": "http://localhost:8080/api/tags/multiple",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tags",
								"multiple"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit a Tag - normal",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a8cbb78a-037b-4b74-b30f-4658912d900c",
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/tags',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"description\": \"description\",",
									"            \"tagType\": \"tagType\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_id\", res.json().id);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "393dd53a-2a56-4831-882b-ba8dfd51c065",
								"type": "text/javascript",
								"exec": [
									"var id=pm.globals.get(\"temp_id\");",
									"pm.globals.unset(\"temp_id\");",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"removeTag(id);",
									"",
									"pm.test(\"Description is changed\",function(){",
									"    pm.expect(pm.response.json().description).to.eql(\"newDescription\");",
									"});",
									"",
									"pm.test(\"TagType is changed\",function(){",
									"    pm.expect(pm.response.json().tagType).to.eql(\"newTagType\");",
									"});",
									"",
									"function removeTag(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/tags/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"description\": \"newDescription\",\n    \"tagType\": \"newTagType\"\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/tags/{{temp_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tags",
								"{{temp_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a Tag - normal",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cda803a2-7f2b-4cfb-941f-4f3da3fe32fe",
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/tags',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"description\": \"description\",",
									"            \"tagType\": \"tagType\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_id\", res.json().id);",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "394d58b5-202c-4e30-9702-615686340e5a",
								"type": "text/javascript",
								"exec": [
									"var id =pm.globals.get(\"temp_id\");",
									"pm.globals.unset(\"temp_id\");",
									"",
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/tags/' + id,",
									"    method: 'GET'",
									"}, function (err, res) {",
									"    pm.test(\"Trying to find it returns the status 404\", function () {",
									"        pm.expect(res.code).to.eql(404);",
									"    });",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/tags/{{temp_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"tags",
								"{{temp_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Import",
			"item": [
				{
					"name": "Import Candidates from CSV - normal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "abefaf75-5aaa-4e13-b697-8a2ab5c7bae8",
								"type": "text/javascript",
								"exec": [
									"var candidate1,candidate2,t;",
									"",
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/not-yet-validated-candidates/',",
									"    method: 'GET'",
									"}, function (err, res) {",
									"    var candidates=res.json()._embedded.candidates;",
									"    for(i=0;i<candidates.length;i++){",
									"        if(candidates[i].email===\"emailImport@email.email\"){",
									"            candidate1=candidates[i];",
									"            removeCandidate(candidates[i].id);",
									"        }",
									"        if(candidates[i].email===\"emailImport2@email.email\"){",
									"            candidate2=candidates[i];",
									"            removeCandidate(candidates[i].id);",
									"        }",
									"    }",
									"    pm.test(\"Candidate1 exists\", function () {",
									"            pm.expect(candidate1.firstName).to.eql(\"firstNameImport\");",
									"            pm.expect(candidate1.lastName).to.eql(\"lastNameImport\");",
									"            pm.expect(candidate1.educationStatus).to.eql(\"educationStatusImport\");",
									"            pm.expect(candidate1.originalStudyYear).to.eql(1);",
									"            pm.expect(candidate1.event).to.eql(\"eventImport\");",
									"            pm.expect(candidate1.checkCandidate).to.eql(\"NOT_YET_VALIDATED\");",
									"        });",
									"    pm.test(\"Candidate2 exists\", function () {",
									"            pm.expect(candidate2.firstName).to.eql(\"firstNameImport2\");",
									"            pm.expect(candidate2.lastName).to.eql(\"lastNameImport2\");",
									"            pm.expect(candidate2.educationStatus).to.eql(\"educationStatusImport2\");",
									"            pm.expect(candidate2.originalStudyYear).to.eql(2);",
									"            pm.expect(candidate2.event).to.eql(\"eventImport2\");",
									"            pm.expect(candidate2.checkCandidate).to.eql(\"NOT_YET_VALIDATED\");",
									"        }); ",
									"});",
									"",
									"function removeCandidate(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/not-yet-validated-candidates/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "firstName,lastName,phone,email,education,educationStatus,originalStudyYear,event,candidateSkillsList,candidateNotesList,dateOfAdding,checkCandidate,currentStudyYear\r\nfirstNameImport,lastNameImport,0000000000,emailImport@email.email,,educationStatusImport,1,eventImport,[],[],,VALIDATED,0\r\nfirstNameImport2,lastNameImport2,0000000000,emailImport2@email.email,,educationStatusImport2,2,eventImport2,[],[],,NOT_YET_VALIDATED,0"
						},
						"url": {
							"raw": "http://localhost:8080/api/import/candidate",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"import",
								"candidate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Import Tags from CSV - normal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "afbffc08-d8c5-4be9-bfe5-002f61e0908c",
								"type": "text/javascript",
								"exec": [
									"var tag1,tag2;",
									"",
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/tags/',",
									"    method: 'GET'",
									"}, function (err, res) {",
									"    var tags=res.json()._embedded.tags;",
									"    for(i=0;i<tags.length;i++){",
									"        if(tags[i].description===\"unique1\"){",
									"            tag1=tags[i];",
									"            removeTag(tags[i].id);",
									"        }",
									"        if(tags[i].description===\"unique3\"){",
									"            tag2=tags[i];",
									"            removeTag(tags[i].id);",
									"        }",
									"    }",
									"    pm.test(\"Tag 1 exists\", function () {",
									"            pm.expect(tag1.tagType).to.eql(\"unique2\");",
									"        });",
									"    pm.test(\"Tag 2 exists\", function () {",
									"            pm.expect(tag2.tagType).to.eql(\"unique4\");",
									"        }); ",
									"});",
									"",
									"function removeTag(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/tags/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "description,tagType,\nunique1,unique2,\nunique3,unique4,"
						},
						"url": {
							"raw": "http://localhost:8080/api/import/tag",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"import",
								"tag"
							]
						}
					},
					"response": []
				},
				{
					"name": "Import Education from CSV - normal",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b1eaace9-9406-4c31-8f62-0220586ce168",
								"type": "text/javascript",
								"exec": [
									"var education1,education2;",
									"",
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/educations/',",
									"    method: 'GET'",
									"}, function (err, res) {",
									"    var educations=res.json()._embedded.educations;",
									"    for(i=0;i<educations.length;i++){",
									"        if(educations[i].educationType===\"educationType1\"){",
									"            education1=educations[i];",
									"            removeEducation(educations[i].id);",
									"        }",
									"        if(educations[i].educationType===\"educationType2\"){",
									"            education2=educations[i];",
									"            removeEducation(educations[i].id);",
									"        }",
									"    }",
									"    pm.test(\"Education 1 exists\", function () {",
									"            pm.expect(education1.provider).to.eql(\"provider1\");",
									"            pm.expect(education1.description).to.eql(\"description1\");",
									"            pm.expect(education1.duration).to.eql(1);",
									"        });",
									"    pm.test(\"Education 2 exists\", function () {",
									"            pm.expect(education2.provider).to.eql(\"provider2\");",
									"            pm.expect(education2.description).to.eql(\"description2\");",
									"            pm.expect(education2.duration).to.eql(2);",
									"        }); ",
									"});",
									"",
									"function removeEducation(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/educations/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "educationType,provider,description,duration,\neducationType1,provider1,description1,1,\neducationType2,provider2,description2,2,"
						},
						"url": {
							"raw": "http://localhost:8080/api/import/education",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"import",
								"education"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Validation",
			"item": [
				{
					"name": "Validate Candidate - Validable",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a5e3e042-20a7-434d-902d-3248588815b2",
								"type": "text/javascript",
								"exec": [
									"var id =pm.globals.get(\"temp_id\");",
									"pm.globals.unset(\"temp_id\");",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"findAndTest(id,function(candidate){",
									"    pm.test(\"The Candidate is Validated\", function () {",
									"        pm.expect(candidate.checkCandidate).to.eql(\"VALIDATED\");",
									"    });",
									"});",
									"",
									"function removeCandidate(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/candidates/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}",
									"",
									"function findAndTest(id,func){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/candidates/' + id,",
									"        method: 'GET'",
									"    }, function (err, res) {",
									"        func(res.json());",
									"        removeCandidate(id);",
									"    });",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "98452a28-c899-466e-acc9-520a10f97478",
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/not-yet-validated-candidates',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstName\": \"firstName\",",
									"            \"lastName\": \"lastName\",",
									"            \"email\": \"one@and.only\",",
									"            \"phone\": \"0000000000\",",
									"            \"checkCandidate\" : \"VALIDATED\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_id\", res.json().id);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/candidate-validation/validate/{{temp_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"candidate-validation",
								"validate",
								"{{temp_id}}"
							]
						},
						"description": "with no duplicates"
					},
					"response": []
				},
				{
					"name": "Validate Candidate - Invalidable Because Of DB",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4bf4e812-cc17-45f1-944e-913e7739d806",
								"type": "text/javascript",
								"exec": [
									"var id = pm.globals.get(\"temp_id\");",
									"var db_id=pm.globals.get(\"temp_db\");",
									"pm.globals.unset(\"temp_id\");",
									"pm.globals.unset(\"temp_db\");",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"findAndTest(id,function (candidate) {",
									"    pm.test(\"The Candidate is Not Yet Validated\", function () {",
									"        pm.expect(candidate.checkCandidate).to.eql(\"NOT_YET_VALIDATED\");",
									"    });",
									"});",
									"",
									"removeCandidate(db_id);",
									"",
									"function removeCandidate(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/candidates/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}",
									"",
									"function removeNYVCandidate(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/not-yet-validated-candidates/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}",
									"",
									"function findAndTest(id,func){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/not-yet-validated-candidates/' + id,",
									"        method: 'GET'",
									"    }, function (err, res) {",
									"        func(res.json());",
									"        removeNYVCandidate(id);",
									"    });",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "3321a388-ca1b-4c4d-90a8-d782f9d98d29",
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/candidates/',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstName\": \"firstName1\",",
									"            \"lastName\": \"lastName1\",",
									"            \"email\": \"not@so.unique\",",
									"            \"phone\": \"0000000001\",",
									"            \"checkCandidate\" : \"VALIDATED\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_db\", res.json().id);",
									"    ",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/not-yet-validated-candidates',",
									"        method: 'POST',",
									"        header: 'Content-Type:application/json',",
									"        body: {",
									"            mode: 'raw',",
									"            raw: JSON.stringify({",
									"                \"firstName\": \"firstName2\",",
									"                \"lastName\": \"lastName2\",",
									"                \"email\": \"not@so.unique\",",
									"                \"phone\": \"0000000002\",",
									"                \"checkCandidate\" : \"VALIDATED\"",
									"                })",
									"        }",
									"    }, function (err, res) {",
									"        pm.globals.set(\"temp_id\", res.json().id);",
									"    });",
									"    ",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/candidate-validation/validate/{{temp_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"candidate-validation",
								"validate",
								"{{temp_id}}"
							]
						},
						"description": "with duplicates"
					},
					"response": []
				},
				{
					"name": "Validate Candidates - Validable",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d6dc460-fd6d-4307-8e43-9651c7780876",
								"type": "text/javascript",
								"exec": [
									"var id1=pm.globals.get(\"temp_id\");",
									"var id2=pm.globals.get(\"temp_id2\");",
									"pm.globals.unset(\"temp_id\");",
									"pm.globals.unset(\"temp_id2\");",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"findAndTest(id1,function(candidate){",
									"    pm.test(\"The Candidate 1 is Validated\", function () {",
									"        pm.expect(candidate.checkCandidate).to.eql(\"VALIDATED\");",
									"    });",
									"});",
									"",
									"findAndTest(id2,function(candidate){",
									"    pm.test(\"The Candidate 2 is Validated\", function () {",
									"        pm.expect(candidate.checkCandidate).to.eql(\"VALIDATED\");",
									"    });",
									"});",
									"",
									"function removeCandidate(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/candidates/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}",
									"",
									"function findAndTest(id,func){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/candidates/' + id,",
									"        method: 'GET'",
									"    }, function (err, res) {",
									"        func(res.json());",
									"        removeCandidate(id);",
									"    });",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5fe59948-5d73-4cee-b5ee-81bdcfe25f72",
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/not-yet-validated-candidates',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstName\": \"firstName\",",
									"            \"lastName\": \"lastName\",",
									"            \"email\": \"one@and.only\",",
									"            \"phone\": \"0000000000\",",
									"            \"checkCandidate\" : \"VALIDATED\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_id\", res.json().id);",
									"});",
									"",
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/not-yet-validated-candidates',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstName\": \"firstName2\",",
									"            \"lastName\": \"lastName2\",",
									"            \"email\": \"one2@and2.only2\",",
									"            \"phone\": \"0000000001\",",
									"            \"checkCandidate\" : \"VALIDATED\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_id2\", res.json().id);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/candidate-validation/multiple-validate/{{temp_id}},{{temp_id2}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"candidate-validation",
								"multiple-validate",
								"{{temp_id}},{{temp_id2}}"
							]
						},
						"description": "with no duplicates"
					},
					"response": []
				},
				{
					"name": "Validate Candidates - Partial Because Of DB",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "197fc42a-389f-48a4-86d9-d24ff83ce322",
								"type": "text/javascript",
								"exec": [
									"var db_id=pm.globals.get(\"temp_db\");",
									"var id=pm.globals.get(\"temp_id\");",
									"var v_id1=pm.globals.get(\"temp_v1\");",
									"var v_id2=pm.globals.get(\"temp_v2\");",
									"pm.globals.unset(\"temp_db\");",
									"pm.globals.unset(\"temp_id\");",
									"pm.globals.unset(\"temp_v1\");",
									"pm.globals.unset(\"temp_v2\");",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"findAndTestNYV(id,function (candidate) {",
									"    pm.test(\"The Candidate 1 is Not Yet Validated\", function () {",
									"        pm.expect(candidate.checkCandidate).to.eql(\"NOT_YET_VALIDATED\");",
									"    });",
									"});",
									"",
									"findAndTest(v_id1,function (candidate) {",
									"    pm.test(\"The Candidate 2 is Validated\", function () {",
									"        pm.expect(candidate.checkCandidate).to.eql(\"VALIDATED\");",
									"    });",
									"});",
									"",
									"findAndTest(v_id2,function (candidate) {",
									"    pm.test(\"The Candidate 3 is Validated\", function () {",
									"        pm.expect(candidate.checkCandidate).to.eql(\"VALIDATED\");",
									"    });",
									"});",
									"",
									"removeCandidate(db_id);",
									"",
									"function removeCandidate(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/candidates/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}",
									"",
									"function removeNYVCandidate(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/not-yet-validated-candidates/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}",
									"",
									"function findAndTest(id,func){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/candidates/' + id,",
									"        method: 'GET'",
									"    }, function (err, res) {",
									"        func(res.json());",
									"        removeCandidate(id);",
									"    });",
									"}",
									"",
									"function findAndTestNYV(id,func){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/not-yet-validated-candidates/' + id,",
									"        method: 'GET'",
									"    }, function (err, res) {",
									"        func(res.json());",
									"        removeNYVCandidate(id);",
									"    });",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "bf5534dd-6a53-41c7-8a3c-be6c65fd2c20",
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/candidates/',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstName\": \"firstName1\",",
									"            \"lastName\": \"lastName1\",",
									"            \"email\": \"not@so.unique\",",
									"            \"phone\": \"0000000001\",",
									"            \"checkCandidate\" : \"VALIDATED\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_db\", res.json().id);",
									"    ",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/not-yet-validated-candidates',",
									"        method: 'POST',",
									"        header: 'Content-Type:application/json',",
									"        body: {",
									"            mode: 'raw',",
									"            raw: JSON.stringify({",
									"                \"firstName\": \"firstName2\",",
									"                \"lastName\": \"lastName2\",",
									"                \"email\": \"not@so.unique\",",
									"                \"phone\": \"0000000002\",",
									"                \"checkCandidate\" : \"VALIDATED\"",
									"                })",
									"        }",
									"    }, function (err, res) {",
									"        pm.globals.set(\"temp_id\", res.json().id);",
									"    });",
									"",
									"});",
									"",
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/not-yet-validated-candidates',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstName\": \"firstName\",",
									"            \"lastName\": \"lastName\",",
									"            \"email\": \"one@and.only\",",
									"            \"phone\": \"0000000000\",",
									"            \"checkCandidate\" : \"VALIDATED\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_v1\", res.json().id);",
									"});",
									"",
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/not-yet-validated-candidates',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstName\": \"firstName2\",",
									"            \"lastName\": \"lastName2\",",
									"            \"email\": \"one2@and2.only2\",",
									"            \"phone\": \"0000000001\",",
									"            \"checkCandidate\" : \"VALIDATED\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_v2\", res.json().id);",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/candidate-validation/multiple-validate/{{temp_id}},{{temp_v1}},{{temp_v2}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"candidate-validation",
								"multiple-validate",
								"{{temp_id}},{{temp_v1}},{{temp_v2}}"
							]
						},
						"description": "with duplicates"
					},
					"response": []
				},
				{
					"name": "Validate Candidates - Partial Because Of input",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "892ce40d-7cfa-4f17-a70b-637830e80fbc",
								"type": "text/javascript",
								"exec": [
									"var id=pm.globals.get(\"temp_id\");",
									"var id2=pm.globals.get(\"temp_id2\");",
									"var v_id1=pm.globals.get(\"temp_v1\");",
									"var v_id2=pm.globals.get(\"temp_v2\");",
									"pm.globals.unset(\"temp_id\");",
									"pm.globals.unset(\"temp_id2\");",
									"pm.globals.unset(\"temp_v1\");",
									"pm.globals.unset(\"temp_v2\");",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"findAndTest(id, function(candidate){",
									"    pm.test(\"The Candidate 1 is Validated\", function () {",
									"        pm.expect(candidate.checkCandidate).to.eql(\"VALIDATED\");",
									"    });",
									"});",
									"",
									"findAndTestNYV(id2, function(candidate){",
									"    pm.test(\"The Candidate 2 is Not Yet Validated\", function () {",
									"        pm.expect(candidate.checkCandidate).to.eql(\"NOT_YET_VALIDATED\");",
									"    });",
									"});",
									"",
									"findAndTest(v_id1, function(candidate){",
									"    pm.test(\"The Candidate 3 is Validated\", function () {",
									"        pm.expect(candidate.checkCandidate).to.eql(\"VALIDATED\");",
									"    });",
									"});",
									"",
									"findAndTest(v_id2, function(candidate){",
									"    pm.test(\"The Candidate 4 is Validated\", function () {",
									"        pm.expect(candidate.checkCandidate).to.eql(\"VALIDATED\");",
									"    });",
									"});",
									"",
									"",
									"function removeCandidate(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/candidates/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}",
									"",
									"function removeNYVCandidate(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/not-yet-validated-candidates/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}",
									"",
									"function findAndTest(id,func){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/candidates/' + id,",
									"        method: 'GET'",
									"    }, function (err, res) {",
									"        func(res.json());",
									"        removeCandidate(id);",
									"    });",
									"}",
									"",
									"function findAndTestNYV(id,func){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/not-yet-validated-candidates/' + id,",
									"        method: 'GET'",
									"    }, function (err, res) {",
									"        func(res.json());",
									"        removeNYVCandidate(id);",
									"    });",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "01c43ef8-a9da-40f1-8093-7601289c8083",
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/not-yet-validated-candidates',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstName\": \"firstName2\",",
									"            \"lastName\": \"lastName2\",",
									"            \"email\": \"not@so.unique\",",
									"            \"phone\": \"0000000002\",",
									"            \"checkCandidate\" : \"VALIDATED\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_id\", res.json().id);",
									"    ",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/not-yet-validated-candidates',",
									"        method: 'POST',",
									"        header: 'Content-Type:application/json',",
									"        body: {",
									"            mode: 'raw',",
									"            raw: JSON.stringify({",
									"                \"firstName\": \"firstName3\",",
									"                \"lastName\": \"lastName3\",",
									"                \"email\": \"not@so.unique\",",
									"                \"phone\": \"0000000003\",",
									"                \"checkCandidate\" : \"VALIDATED\"",
									"                })",
									"        }",
									"    }, function (err, res) {",
									"        pm.globals.set(\"temp_id2\", res.json().id);",
									"    });",
									"});",
									"",
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/not-yet-validated-candidates',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstName\": \"firstName\",",
									"            \"lastName\": \"lastName\",",
									"            \"email\": \"one@and.only\",",
									"            \"phone\": \"0000000000\",",
									"            \"checkCandidate\" : \"VALIDATED\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_v1\", res.json().id);",
									"});",
									"",
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/not-yet-validated-candidates',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstName\": \"firstName2\",",
									"            \"lastName\": \"lastName2\",",
									"            \"email\": \"one2@and2.only2\",",
									"            \"phone\": \"0000000001\",",
									"            \"checkCandidate\" : \"VALIDATED\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_v2\", res.json().id);",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/candidate-validation/multiple-validate/{{temp_id}},{{temp_id2}},{{temp_v1}},{{temp_v2}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"candidate-validation",
								"multiple-validate",
								"{{temp_id}},{{temp_id2}},{{temp_v1}},{{temp_v2}}"
							]
						},
						"description": "with duplicates"
					},
					"response": []
				},
				{
					"name": "Validate Candidates - Partial Because Of DB and input",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "137e9c53-86d6-4720-b38d-cbbdc9bf9f67",
								"type": "text/javascript",
								"exec": [
									"var db_id=pm.globals.get(\"temp_db\");",
									"var id=pm.globals.get(\"temp_id\");",
									"var id2=pm.globals.get(\"temp_id2\");",
									"var v_id1=pm.globals.get(\"temp_v1\");",
									"var v_id2=pm.globals.get(\"temp_v2\");",
									"pm.globals.unset(\"temp_db\");",
									"pm.globals.unset(\"temp_id\");",
									"pm.globals.unset(\"temp_id2\");",
									"pm.globals.unset(\"temp_v1\");",
									"pm.globals.unset(\"temp_v2\");",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"findAndTestNYV(id,function(candidate){",
									"    pm.test(\"The Candidate 1 is Not Yet Validated\", function () {",
									"        pm.expect(candidate.checkCandidate).to.eql(\"NOT_YET_VALIDATED\");",
									"    });",
									"});",
									"",
									"findAndTestNYV(id2,function(candidate){",
									"    pm.test(\"The Candidate 2 is Not Yet Validated\", function () {",
									"        pm.expect(candidate.checkCandidate).to.eql(\"NOT_YET_VALIDATED\");",
									"    });",
									"});",
									"",
									"findAndTest(v_id1,function(candidate){",
									"    pm.test(\"The Candidate 3 is Validated\", function () {",
									"        pm.expect(candidate.checkCandidate).to.eql(\"VALIDATED\");",
									"    });",
									"});",
									"",
									"findAndTest(v_id2,function(candidate){",
									"    pm.test(\"The Candidate 4 is Validated\", function () {",
									"        pm.expect(candidate.checkCandidate).to.eql(\"VALIDATED\");",
									"    });",
									"});",
									"",
									"removeCandidate(db_id);",
									"",
									"function removeCandidate(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/candidates/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}",
									"",
									"function removeNYVCandidate(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/not-yet-validated-candidates/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}",
									"",
									"function findAndTest(id,func){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/candidates/' + id,",
									"        method: 'GET'",
									"    }, function (err, res) {",
									"        func(res.json());",
									"        removeCandidate(id);",
									"    });",
									"}",
									"",
									"function findAndTestNYV(id,func){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/not-yet-validated-candidates/' + id,",
									"        method: 'GET'",
									"    }, function (err, res) {",
									"        func(res.json());",
									"        removeNYVCandidate(id);",
									"    });",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "6665202c-03da-47d1-98ed-a8e304148f5e",
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/candidates/',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstName\": \"firstName1\",",
									"            \"lastName\": \"lastName1\",",
									"            \"email\": \"not@so.unique\",",
									"            \"phone\": \"0000000001\",",
									"            \"checkCandidate\" : \"VALIDATED\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_db\", res.json().id);",
									"    ",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/not-yet-validated-candidates',",
									"        method: 'POST',",
									"        header: 'Content-Type:application/json',",
									"        body: {",
									"            mode: 'raw',",
									"            raw: JSON.stringify({",
									"                \"firstName\": \"firstName2\",",
									"                \"lastName\": \"lastName2\",",
									"                \"email\": \"not@so.unique\",",
									"                \"phone\": \"0000000002\",",
									"                \"checkCandidate\" : \"VALIDATED\"",
									"                })",
									"        }",
									"    }, function (err, res) {",
									"        pm.globals.set(\"temp_id\", res.json().id);",
									"        ",
									"        pm.sendRequest({",
									"            url: 'http://localhost:8080/api/not-yet-validated-candidates',",
									"            method: 'POST',",
									"            header: 'Content-Type:application/json',",
									"            body: {",
									"                mode: 'raw',",
									"                raw: JSON.stringify({",
									"                    \"firstName\": \"firstName3\",",
									"                    \"lastName\": \"lastName3\",",
									"                    \"email\": \"not@so.unique\",",
									"                    \"phone\": \"0000000003\",",
									"                    \"checkCandidate\" : \"VALIDATED\"",
									"                    })",
									"            }",
									"        }, function (err, res) {",
									"            pm.globals.set(\"temp_id2\", res.json().id);",
									"        });",
									"    });",
									"});",
									"",
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/not-yet-validated-candidates',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstName\": \"firstName\",",
									"            \"lastName\": \"lastName\",",
									"            \"email\": \"one@and.only\",",
									"            \"phone\": \"0000000000\",",
									"            \"checkCandidate\" : \"VALIDATED\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_v1\", res.json().id);",
									"});",
									"",
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/not-yet-validated-candidates',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstName\": \"firstName2\",",
									"            \"lastName\": \"lastName2\",",
									"            \"email\": \"one2@and2.only2\",",
									"            \"phone\": \"0000000001\",",
									"            \"checkCandidate\" : \"VALIDATED\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_v2\", res.json().id);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/candidate-validation/multiple-validate/{{temp_id}},{{temp_id2}},{{temp_v1}},{{temp_v2}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"candidate-validation",
								"multiple-validate",
								"{{temp_id}},{{temp_id2}},{{temp_v1}},{{temp_v2}}"
							]
						},
						"description": "with duplicates"
					},
					"response": []
				},
				{
					"name": "Validate Candidates - Invalidable Because Of DB",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3dd21d6c-4e93-429b-8481-15c1c38c363c",
								"type": "text/javascript",
								"exec": [
									"var db_id=pm.globals.get(\"temp_db\");",
									"var id=pm.globals.get(\"temp_id\");",
									"var id2=pm.globals.get(\"temp_id2\");",
									"pm.globals.unset(\"temp_db\");",
									"pm.globals.unset(\"temp_id\");",
									"pm.globals.unset(\"temp_id2\");",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"findAndTest(id,function(candidate){",
									"    pm.test(\"The Candidate 1 is Not Yet Validated\", function () {",
									"        pm.expect(candidate.checkCandidate).to.eql(\"NOT_YET_VALIDATED\");",
									"    });",
									"});",
									"",
									"findAndTest(id2,function(candidate){",
									"    pm.test(\"The Candidate 2 is Not Yet Validated\", function () {",
									"        pm.expect(candidate.checkCandidate).to.eql(\"NOT_YET_VALIDATED\");",
									"    });",
									"});",
									"",
									"removeCandidate(db_id);",
									"",
									"function removeCandidate(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/candidates/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}",
									"",
									"function removeNYVCandidate(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/not-yet-validated-candidates/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}",
									"",
									"function findAndTest(id,func){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/not-yet-validated-candidates/' + id,",
									"        method: 'GET'",
									"    }, function (err, res) {",
									"        func(res.json());",
									"        removeNYVCandidate(id);",
									"    });",
									"}"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d09b7ed3-ce8f-4e94-bfb8-0a1dc40dcbdc",
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/candidates/',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstName\": \"firstName1\",",
									"            \"lastName\": \"lastName1\",",
									"            \"email\": \"not@so.unique\",",
									"            \"phone\": \"0000000001\",",
									"            \"checkCandidate\" : \"VALIDATED\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_db\", res.json().id);",
									"    ",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/not-yet-validated-candidates',",
									"        method: 'POST',",
									"        header: 'Content-Type:application/json',",
									"        body: {",
									"            mode: 'raw',",
									"            raw: JSON.stringify({",
									"                \"firstName\": \"firstName2\",",
									"                \"lastName\": \"lastName2\",",
									"                \"email\": \"not@so.unique\",",
									"                \"phone\": \"0000000002\",",
									"                \"checkCandidate\" : \"VALIDATED\"",
									"                })",
									"        }",
									"    }, function (err, res) {",
									"        pm.globals.set(\"temp_id\", res.json().id);",
									"        ",
									"        pm.sendRequest({",
									"            url: 'http://localhost:8080/api/not-yet-validated-candidates',",
									"            method: 'POST',",
									"            header: 'Content-Type:application/json',",
									"            body: {",
									"                mode: 'raw',",
									"                raw: JSON.stringify({",
									"                    \"firstName\": \"firstName3\",",
									"                    \"lastName\": \"lastName3\",",
									"                    \"email\": \"not@so.unique\",",
									"                    \"phone\": \"0000000003\",",
									"                    \"checkCandidate\" : \"VALIDATED\"",
									"                    })",
									"            }",
									"        }, function (err, res) {",
									"            pm.globals.set(\"temp_id2\", res.json().id);",
									"        });",
									"    });",
									"});",
									"",
									"    ",
									"",
									"    ",
									""
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/candidate-validation/multiple-validate/{{temp_id}},{{temp_id2}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"candidate-validation",
								"multiple-validate",
								"{{temp_id}},{{temp_id2}}"
							]
						},
						"description": "with duplicates"
					},
					"response": []
				},
				{
					"name": "Find all Duplicates for id from valid - normal",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e27cd6aa-6358-459f-9968-0a64a143a118",
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/candidates/',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstName\": \"firstName1\",",
									"            \"lastName\": \"lastName1\",",
									"            \"email\": \"wow@so.unique\",",
									"            \"phone\": \"0000000001\",",
									"            \"checkCandidate\" : \"VALIDATED\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_v1\", res.json().id);",
									"    ",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/candidates',",
									"        method: 'POST',",
									"        header: 'Content-Type:application/json',",
									"        body: {",
									"            mode: 'raw',",
									"            raw: JSON.stringify({",
									"                \"firstName\": \"firstName1\",",
									"                \"lastName\": \"lastName1\",",
									"                \"email\": \"wow1@so.unique\",",
									"                \"phone\": \"0000000001\",",
									"                \"checkCandidate\" : \"VALIDATED\"",
									"                })",
									"        }",
									"    }, function (err, res) {",
									"        pm.globals.set(\"temp_v2\", res.json().id);",
									"        ",
									"        pm.sendRequest({",
									"            url: 'http://localhost:8080/api/not-yet-validated-candidates',",
									"            method: 'POST',",
									"            header: 'Content-Type:application/json',",
									"            body: {",
									"                mode: 'raw',",
									"                raw: JSON.stringify({",
									"                    \"firstName\": \"firstName1\",",
									"                    \"lastName\": \"lastName1\",",
									"                    \"email\": \"not@so.unique\",",
									"                    \"phone\": \"0000000001\",",
									"                    \"checkCandidate\" : \"VALIDATED\"",
									"                    })",
									"            }",
									"        }, function (err, res) {",
									"            pm.globals.set(\"temp_n1\", res.json().id);",
									"            ",
									"                pm.sendRequest({",
									"                url: 'http://localhost:8080/api/not-yet-validated-candidates',",
									"                method: 'POST',",
									"                header: 'Content-Type:application/json',",
									"                body: {",
									"                    mode: 'raw',",
									"                    raw: JSON.stringify({",
									"                        \"firstName\": \"firstName1\",",
									"                        \"lastName\": \"lastName1\",",
									"                        \"email\": \"not@so.unique\",",
									"                        \"phone\": \"0000000001\",",
									"                        \"checkCandidate\" : \"VALIDATED\"",
									"                        })",
									"                }",
									"            }, function (err, res) {",
									"                pm.globals.set(\"temp_n2\", res.json().id);",
									"            });",
									"        });",
									"    });",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "8e7ddb01-0240-4635-a6cc-07a613ebaeb2",
								"type": "text/javascript",
								"exec": [
									"var id_v1=pm.globals.get(\"temp_v1\");",
									"var id_v2=pm.globals.get(\"temp_v2\");",
									"var id_n1=pm.globals.get(\"temp_n1\");",
									"var id_n2=pm.globals.get(\"temp_n2\");",
									"pm.globals.unset(\"temp_v1\");",
									"pm.globals.unset(\"temp_v2\");",
									"pm.globals.unset(\"temp_n1\");",
									"pm.globals.unset(\"temp_n2\");",
									"",
									"var dup_list=pm.response.json()._embedded.duplicates;",
									"var ids_nr=0;",
									"for(i=dup_list.length-2;i<dup_list.length;i++){",
									"    ids_nr+=dup_list[i].ids.length;",
									"}",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Found duplicates \", function () {",
									"    pm.expect(ids_nr).to.be.gt(0);",
									"});",
									"",
									"pm.test(\"Found duplicates only in Validated Candidates\", function () {",
									"    for(i=dup_list.length-2;i<dup_list.length;i++){",
									"        pm.expect(dup_list[i].ids).to.not.include(id_n1);",
									"        pm.expect(dup_list[i].ids).to.not.include(id_n2);",
									"    }",
									"});",
									"",
									"removeCandidate(id_v1);",
									"removeCandidate(id_v2);",
									"removeNYVCandidate(id_n1);",
									"removeNYVCandidate(id_n2);",
									"",
									"function removeCandidate(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/candidates/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}",
									"",
									"function removeNYVCandidate(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/not-yet-validated-candidates/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "http://localhost:8080/api/candidate-validation/duplicates-on-valid/{{temp_v1}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"candidate-validation",
								"duplicates-on-valid",
								"{{temp_v1}}"
							]
						},
						"description": "get all duplicate of id"
					},
					"response": []
				},
				{
					"name": "Find all Duplicates for id from non valid - normal",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e27cd6aa-6358-459f-9968-0a64a143a118",
								"type": "text/javascript",
								"exec": [
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/candidates/',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstName\": \"firstName1\",",
									"            \"lastName\": \"lastName1\",",
									"            \"email\": \"wow@so.unique\",",
									"            \"phone\": \"0000000001\",",
									"            \"checkCandidate\" : \"VALIDATED\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_v1\", res.json().id);",
									"    ",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/candidates',",
									"        method: 'POST',",
									"        header: 'Content-Type:application/json',",
									"        body: {",
									"            mode: 'raw',",
									"            raw: JSON.stringify({",
									"                \"firstName\": \"firstName1\",",
									"                \"lastName\": \"lastName1\",",
									"                \"email\": \"wow1@so.unique\",",
									"                \"phone\": \"0000000001\",",
									"                \"checkCandidate\" : \"VALIDATED\"",
									"                })",
									"        }",
									"    }, function (err, res) {",
									"        pm.globals.set(\"temp_v2\", res.json().id);",
									"        ",
									"        pm.sendRequest({",
									"            url: 'http://localhost:8080/api/not-yet-validated-candidates',",
									"            method: 'POST',",
									"            header: 'Content-Type:application/json',",
									"            body: {",
									"                mode: 'raw',",
									"                raw: JSON.stringify({",
									"                    \"firstName\": \"firstName1\",",
									"                    \"lastName\": \"lastName1\",",
									"                    \"email\": \"not@so.unique\",",
									"                    \"phone\": \"0000000001\",",
									"                    \"checkCandidate\" : \"VALIDATED\"",
									"                    })",
									"            }",
									"        }, function (err, res) {",
									"            pm.globals.set(\"temp_n1\", res.json().id);",
									"            ",
									"                pm.sendRequest({",
									"                url: 'http://localhost:8080/api/not-yet-validated-candidates',",
									"                method: 'POST',",
									"                header: 'Content-Type:application/json',",
									"                body: {",
									"                    mode: 'raw',",
									"                    raw: JSON.stringify({",
									"                        \"firstName\": \"firstName1\",",
									"                        \"lastName\": \"lastName1\",",
									"                        \"email\": \"not@so.unique\",",
									"                        \"phone\": \"0000000001\",",
									"                        \"checkCandidate\" : \"VALIDATED\"",
									"                        })",
									"                }",
									"            }, function (err, res) {",
									"                pm.globals.set(\"temp_n2\", res.json().id);",
									"            });",
									"        });",
									"    });",
									"});"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "0384f987-4184-4361-9d5d-a29f6d094bb0",
								"type": "text/javascript",
								"exec": [
									"var id_v1=pm.globals.get(\"temp_v1\");",
									"var id_v2=pm.globals.get(\"temp_v2\");",
									"var id_n1=pm.globals.get(\"temp_n1\");",
									"var id_n2=pm.globals.get(\"temp_n2\");",
									"pm.globals.unset(\"temp_v1\");",
									"pm.globals.unset(\"temp_v2\");",
									"pm.globals.unset(\"temp_n1\");",
									"pm.globals.unset(\"temp_n2\");",
									"",
									"var dup_list=pm.response.json()._embedded.duplicates;",
									"var ids_nr=0;",
									"for(i=dup_list.length-2;i<dup_list.length;i++){",
									"    ids_nr+=dup_list[i].ids.length;",
									"}",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Found duplicates \", function () {",
									"    pm.expect(ids_nr).to.be.gt(0);",
									"});",
									"",
									"pm.test(\"Found duplicates only in Not Yet Validated Candidates\", function () {",
									"    for(i=dup_list.length-2;i<dup_list.length;i++){",
									"        pm.expect(dup_list[i].ids).to.not.include(id_v1);",
									"        pm.expect(dup_list[i].ids).to.not.include(id_v2);",
									"    }",
									"});",
									"",
									"removeCandidate(id_v1);",
									"removeCandidate(id_v2);",
									"removeNYVCandidate(id_n1);",
									"removeNYVCandidate(id_n2);",
									"",
									"function removeCandidate(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/candidates/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}",
									"",
									"function removeNYVCandidate(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/not-yet-validated-candidates/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "http://localhost:8080/api/candidate-validation/duplicates-on-non-valid/{{temp_n1}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"candidate-validation",
								"duplicates-on-non-valid",
								"{{temp_n1}}"
							]
						},
						"description": "get all duplicate of id"
					},
					"response": []
				}
			]
		},
		{
			"name": "Download",
			"item": [
				{
					"name": "Download Candiates as a CSV - normal",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8dff12bf-2119-49e7-97be-2fd01e06e1d4",
								"type": "text/javascript",
								"exec": [
									"getCsv = function(res){",
									"    return res.json().firstName+\",\"+res.json().lastName+\",\"+res.json().phone+\",\"",
									"        +res.json().email+\",,,0,,[],[],,\"+res.json().checkCandidate+\",0\";",
									"};",
									"",
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/not-yet-validated-candidates',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstName\": \"firstname1\",",
									"            \"lastName\": \"lastname1\",",
									"            \"email\": \"email1@email1.email1\",",
									"            \"phone\": \"0000000001\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_csv1\", getCsv(res));",
									"    pm.globals.set(\"temp_id1\", res.json().id);",
									"});",
									"",
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/not-yet-validated-candidates',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstName\": \"firstname2\",",
									"            \"lastName\": \"lastname2\",",
									"            \"email\": \"email2@email2.email2\",",
									"            \"phone\": \"0000000002\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_csv2\", getCsv(res));",
									"    pm.globals.set(\"temp_id2\", res.json().id);",
									"});",
									"",
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/candidates',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstName\": \"firstname3\",",
									"            \"lastName\": \"lastname3\",",
									"            \"email\": \"email3@email3.email3\",",
									"            \"phone\": \"0000000003\",",
									"            \"checkCandidate\" : \"VALIDATED\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_csv3v\",  getCsv(res));",
									"    pm.globals.set(\"temp_id3v\", res.json().id);",
									"",
									"});",
									"",
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/candidates',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"firstName\": \"firstname4\",",
									"            \"lastName\": \"lastname4\",",
									"            \"email\": \"email4@email4.email4\",",
									"            \"phone\": \"0000000004\",",
									"            \"checkCandidate\" : \"VALIDATED\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_csv4v\", getCsv(res));",
									"    pm.globals.set(\"temp_id4v\", res.json().id);",
									"});",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "efbbeabd-b786-40e8-aa3b-e56f8f238df7",
								"type": "text/javascript",
								"exec": [
									"var id1=pm.globals.get(\"temp_id1\");",
									"var id2=pm.globals.get(\"temp_id2\");",
									"var id3v=pm.globals.get(\"temp_id3v\");",
									"var id4v=pm.globals.get(\"temp_id4v\");",
									"var csv1=pm.globals.get(\"temp_csv1\");",
									"var csv2=pm.globals.get(\"temp_csv2\");",
									"var csv3v=pm.globals.get(\"temp_csv3v\");",
									"var csv4v=pm.globals.get(\"temp_csv4v\");",
									"pm.globals.unset(\"temp_id1\");",
									"pm.globals.unset(\"temp_id2\");",
									"pm.globals.unset(\"temp_id3v\");",
									"pm.globals.unset(\"temp_id4v\");",
									"pm.globals.unset(\"temp_csv1\");",
									"pm.globals.unset(\"temp_csv2\");",
									"pm.globals.unset(\"temp_csv3v\");",
									"pm.globals.unset(\"temp_csv4v\");",
									"",
									"pm.test(\"Has the two Valid Candidates\", function () {",
									"    pm.expect(pm.response.text()).to.include(csv3v);",
									"    pm.expect(pm.response.text()).to.include(csv4v);",
									"});",
									"",
									"pm.test(\"Does not have the two Not Yet Valid Candidates\", function () {",
									"    pm.expect(pm.response.text()).to.not.include(csv1);",
									"    pm.expect(pm.response.text()).to.not.include(csv2);",
									"});",
									"",
									"removeNYVCandidate(id1);",
									"removeNYVCandidate(id2);",
									"removeCandidate(id3v);",
									"removeCandidate(id4v);",
									"",
									"function removeCandidate(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/candidates/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}",
									"function removeNYVCandidate(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/not-yet-validated-candidates/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/download/list",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"download",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "Download Tags as a CSV - normal",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "963ac153-f7c9-4fce-99be-ecac26cf1373",
								"type": "text/javascript",
								"exec": [
									"getCsv = function(res){",
									"    return res.json().description+\",\"+res.json().tagType;",
									"};",
									"",
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/tags',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"description\": \"desc1\",",
									"            \"tagType\": \"tagType\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_csv1\", getCsv(res));",
									"    pm.globals.set(\"temp_id1\", res.json().id);",
									"});",
									"",
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/tags',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"description\": \"desc1\",",
									"            \"tagType\": \"tagType\"",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_csv2\", getCsv(res));",
									"    pm.globals.set(\"temp_id2\", res.json().id);",
									"});",
									"",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "fbae837e-2ecc-4284-9f30-c145df86f162",
								"type": "text/javascript",
								"exec": [
									"var id1=pm.globals.get(\"temp_id1\");",
									"var id2=pm.globals.get(\"temp_id2\");",
									"var csv1=pm.globals.get(\"temp_csv1\");",
									"var csv2=pm.globals.get(\"temp_csv2\");",
									"pm.globals.unset(\"temp_id1\");",
									"pm.globals.unset(\"temp_id2\");",
									"pm.globals.unset(\"temp_csv1\");",
									"pm.globals.unset(\"temp_csv2\");",
									"",
									"pm.test(\"Has the two Educations\", function () {",
									"    pm.expect(pm.response.text()).to.include(csv1);",
									"    pm.expect(pm.response.text()).to.include(csv2);",
									"});",
									"",
									"removeTag(id1);",
									"removeTag(id2);",
									"",
									"function removeTag(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/tags/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/download/tag",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"download",
								"tag"
							]
						}
					},
					"response": []
				},
				{
					"name": "Download Educations as a CSV - normal",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "83a92daf-9912-4a37-8cdb-8ae273a80902",
								"type": "text/javascript",
								"exec": [
									"getCsv = function(res){",
									"    return res.json().educationType+\",\"+res.json().provider+\",\"+res.json().description+\",\"+res.json().duration;",
									"};",
									"",
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/educations',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"educationType\": \"type1\",",
									"            \"provider\": \"provider1\",",
									"            \"description\": \"desc1\",",
									"            \"duration\": 1",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_csv1\", getCsv(res));",
									"    pm.globals.set(\"temp_id1\", res.json().id);",
									"});",
									"",
									"pm.sendRequest({",
									"    url: 'http://localhost:8080/api/educations',",
									"    method: 'POST',",
									"    header: 'Content-Type:application/json',",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"educationType\": \"type2\",",
									"            \"provider\": \"provider2\",",
									"            \"description\": \"desc2\",",
									"            \"duration\": 3",
									"            })",
									"    }",
									"}, function (err, res) {",
									"    pm.globals.set(\"temp_csv2\", getCsv(res));",
									"    pm.globals.set(\"temp_id2\", res.json().id);",
									"});",
									"",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "dcc13f49-7097-49d6-8bb4-c0a1b7843a68",
								"type": "text/javascript",
								"exec": [
									"var id1=pm.globals.get(\"temp_id1\");",
									"var id2=pm.globals.get(\"temp_id2\");",
									"var csv1=pm.globals.get(\"temp_csv1\");",
									"var csv2=pm.globals.get(\"temp_csv2\");",
									"pm.globals.unset(\"temp_id1\");",
									"pm.globals.unset(\"temp_id2\");",
									"pm.globals.unset(\"temp_csv1\");",
									"pm.globals.unset(\"temp_csv2\");",
									"",
									"pm.test(\"Has the two Educations\", function () {",
									"    pm.expect(pm.response.text()).to.include(csv1);",
									"    pm.expect(pm.response.text()).to.include(csv2);",
									"});",
									"",
									"removeEducation(id1);",
									"removeEducation(id2);",
									"",
									"function removeEducation(id){",
									"    pm.sendRequest({",
									"        url: 'http://localhost:8080/api/educations/'+id,",
									"        method: 'DELETE'",
									"        }, function (err, res) {",
									"    ",
									"    });",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/download/education",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"download",
								"education"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Verify",
			"item": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"exec": [
					""
				],
				"id": "dfc59610-5ef2-4f3c-ba7e-bbe9a787458c",
				"type": "text/javascript"
			}
		},
		{
			"listen": "test",
			"script": {
				"exec": [
					""
				],
				"id": "f3e782c6-36c1-4937-ad43-7167202bd04d",
				"type": "text/javascript"
			}
		}
	]
}